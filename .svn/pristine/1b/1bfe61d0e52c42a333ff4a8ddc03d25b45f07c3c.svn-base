package com.fuexpress.kr.ui.activity;

import android.content.DialogInterface;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.fuexpress.kr.R;
import com.fuexpress.kr.base.BaseActivity;
import com.fuexpress.kr.base.BusEvent;
import com.fuexpress.kr.model.AccountManager;
import com.fuexpress.kr.model.BalanceManager;
import com.fuexpress.kr.ui.uiutils.UIUtils;
import com.fuexpress.kr.ui.view.ClearEditText;
import com.fuexpress.kr.ui.view.CustomDialog;
import com.fuexpress.kr.ui.view.TitleBarView;

import cn.pedant.SweetAlert.SweetAlertDialog;

public class BindingGiftCardActivity extends BaseActivity {

    private View mRootView;
    private TextView mTv_in_binding_gift_card_can_use_money;
    private ClearEditText mEd_in_binding_gift_card_number;
    private String mCardNum;
    private CustomDialog.Builder dialog;

    @Override
    public View setInitView() {
        mRootView = View.inflate(this, R.layout.activity_binding_gift_card, null);
        TitleBarView titleBarView = (TitleBarView) mRootView.findViewById(R.id.title_in_bind_gc);
        titleBarView.getIv_in_title_back().setOnClickListener(this);
        TextView title_back_tv = titleBarView.getmTv_in_title_back_tv();
        title_back_tv.setText(getString(R.string.string_for_my_balance_title));
        title_back_tv.setOnClickListener(this);
        /*TitleBarView titleBarView = new TitleBarView(mRootView);
        titleBarView.setTitle(getString(R.string.my_gift_card_tab_03));
        titleBarView.getImageViewLeft().setOnClickListener(this);
        titleBarView.setTextViewOnclickAndReturn(titleBarView.getTextViewTitleLeftShopCart(), this).setText(getString(R.string.String_my_value_card));*/

        return mRootView;
    }

    @Override
    public void initView() {
        mTv_in_binding_gift_card_can_use_money = (TextView) mRootView.findViewById(R.id.tv_in_binding_gift_card_can_use_money);
        mEd_in_binding_gift_card_number = (ClearEditText) mRootView.findViewById(R.id.ed_in_binding_gift_card_number);
        Button btn_in_binding_gift_card_go_binding = (Button) mRootView.findViewById(R.id.btn_in_binding_gift_card_go_binding);
        btn_in_binding_gift_card_go_binding.setOnClickListener(this);
        initData();

    }

    private void initData() {
        BalanceManager.getInstance().getGiftCardBalanceRequest();
    }

    @Override
    public void onClick(View v) {
        super.onClick(v);
        switch (v.getId()) {
            /*case R.id.iv_title_back:
            case R.id.textview_title_left_shorcart:
                finish();
                break;*/
            case R.id.btn_in_binding_gift_card_go_binding:
                checkCardNum();
                break;
        }
    }

    private void checkCardNum() {
        mCardNum = mEd_in_binding_gift_card_number.getText().toString().trim();
        if (TextUtils.isEmpty(mCardNum)) {
            return;
        }
        /*String matcher = StringUtils.getMatcher("[0-9a-zA-Z]+", mCardNum);
        LogUtils.e("这是用正则截取后:" + matcher);*/
        String[] split = mCardNum.split("\\-");
        String newCardNum = "";
        for (String aSplit : split) {
            newCardNum += aSplit;
        }
        //LogUtils.e("这是截取好多的:" + newCardNum);
        BalanceManager.getInstance().getGiftCardStoresiteRequest(newCardNum);
    }

    @Override
    public void onEventMainThread(BusEvent event) {
        super.onEventMainThread(event);

        switch (event.getType()) {
            case BusEvent.GET_GIFT_CARD_BALANCE_COMPLETE:
                boolean isSuccess = event.getBooleanParam();
                if (isSuccess) {
                    mTv_in_binding_gift_card_can_use_money.setText(UIUtils.getCurrency(this, AccountManager.getInstance().getCurrencyCode(), BalanceManager.getInstance().mGiftcardaccount));
                }
                break;
            case BusEvent.GET_GIFT_CARD_STORESITE_COMPLETE:
                boolean isGetGiftCardStoresiteSuccess = event.getBooleanParam();
                if (isGetGiftCardStoresiteSuccess) {
                    String whereFrom = event.getStrParam();
                    String cyCode = event.getStrParam02();
                    //Toast.makeText(this, "来自" + whereFrom, Toast.LENGTH_SHORT).show();
                    showCyCodeDialog(cyCode, whereFrom);
                    //showDialog(whereFrom);
                } else {
                    setIsShowContentView(true);
                    showProgressDiaLog(SweetAlertDialog.ERROR_TYPE, event.getStrParam());
                    dissMissProgressDiaLog(1000);
                }
                break;
            case BusEvent.BINDING_GIFT_CARD_REQUEST_COMPLETE:
                boolean isBindSuccess = event.getBooleanParam();
                if (isBindSuccess) {
                    initData();
                    mEd_in_binding_gift_card_number.setText("");
                    showProgressDiaLog(SweetAlertDialog.SUCCESS_TYPE, getString(R.string.my_gift_card_order_binding_success));
                    dissMissProgressDiaLog(1000);
                } else {
                    showProgressDiaLog(SweetAlertDialog.ERROR_TYPE, getString(R.string.my_gift_card_order_binding_faile_text));
                    dissMissProgressDiaLog(1000);
                }
                break;
        }
    }

    private void showCyCodeDialog(String cyCode, final String whereFrom) {
        /*if (!AccountManager.getInstance().getCurrencyCode().equals(cyCode)) {
            dialog = new CustomDialog.Builder(this);
            dialog.setMessage(getString(R.string.my_gift_card_bingding_cycode_text, cyCode));
            dialog.setPositiveButton(getString(R.string.my_gift_card_order_binding_dialog_config), new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    dialog.dismiss();
                    showDialog(whereFrom);

                }
            });
            dialog.setNegativeButton(getString(R.string.my_gift_card_order_binding_dialog_cancle), new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    dialog.dismiss();
                    showDialog(whereFrom);
                }
            });
            dialog.create().show();
        } else {
            showDialog(whereFrom);
        }*/

        if (getString(R.string.gift_card_from_fkd).equals(whereFrom)) {
            if (!AccountManager.getInstance().getCurrencyCode().equals(cyCode)) {
                dialog = new CustomDialog.Builder(this);
                dialog.setMessage(getString(R.string.my_gift_card_bingding_cycode_text, cyCode));
                dialog.setPositiveButton(getString(R.string.my_gift_card_order_binding_dialog_config), new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.dismiss();
                        bindingGiftCardInNet();

                    }
                });
                dialog.setNegativeButton(getString(R.string.my_gift_card_order_binding_dialog_cancle), new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.dismiss();
                        //showDialog(whereFrom);
                    }
                });
                dialog.create().show();
            } else
                bindingGiftCardInNet();
        } else {
            if (!TextUtils.isEmpty(whereFrom))
                showDialog(whereFrom);
            else
                bindingGiftCardInNet();
        }

    }

    public void showDialog(String s) {
        String fromThis = getString(R.string.gift_card_from_there);
        String dialogConfig = getString(R.string.my_gift_card_order_binding_dialog_config);
        String dialogcancle = getString(R.string.my_gift_card_order_binding_dialog_cancle);
        if (!fromThis.equals(s)) {
            dialog = new CustomDialog.Builder(this);
            dialog.setMessage(getResources().getString(R.string.binding_gift_card_dialog_title_01) + s + getResources().getString(R.string.binding_gift_card_dialog_title_02));
            dialog.setPositiveButton(dialogConfig, new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    //Toast.makeText(BindingGiftCardActivity.this, "点击了确定", Toast.LENGTH_SHORT).show();
                    //GiftCardManager.getInstance().bindGiftCardRequest(mCardNum);
                    bindingGiftCardInNet();
                    dialog.dismiss();
                }
            });
            dialog.setNegativeButton(dialogcancle, new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    dialog.dismiss();
                }
            });
            dialog.create().show();
        } else
            bindingGiftCardInNet();
    }

    private void bindingGiftCardInNet() {
        BalanceManager.getInstance().bindGiftCardRequest(mCardNum);
    }
}
