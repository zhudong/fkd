package com.fuexpress.kr.ui.activity;

import android.graphics.Bitmap;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.webkit.WebChromeClient;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.fuexpress.kr.R;
import com.fuexpress.kr.base.BaseActivity;
import com.fuexpress.kr.conf.Constants;
import com.fuexpress.kr.model.AccountManager;
import com.fuexpress.kr.ui.view.TitleBarView;
import com.fuexpress.kr.utils.LogUtils;

/**
 * Created by Administrator on 2016/5/12.
 */
public class CardTOUActivity extends BaseActivity {

    private View           rootView;
    private WebView        TOUWv;
    private ProgressBar    mPb;
    private TextView       refreshTv;
    private ImageView backIv;
    private TextView backTv;

    private String         url;

    @Override
    public View setInitView() {
        rootView = LayoutInflater.from(this).inflate(R.layout.activity_card_tou, null);
        TitleBarView titleBarView = (TitleBarView) rootView.findViewById(R.id.card_tou_titlebar);
        backIv = titleBarView.getIv_in_title_back();
        backTv = titleBarView.getmTv_in_title_back_tv();
        refreshTv = titleBarView.getTv_in_title_right();
        titleBarView.setTitleText(getString(R.string.card_TOU_title_bar_title));
        refreshTv.setVisibility(View.VISIBLE);
        refreshTv.setText(getResources().getString(R.string.String_refresh));

        mPb = (ProgressBar) rootView.findViewById(R.id.card_tou_pb);
        TOUWv = (WebView) rootView.findViewById(R.id.card_tou_wv);
        AccountManager accountManager = AccountManager.getInstance();
        url         = Constants.WebWiewUrl.getUrl(Constants.WebWiewUrl.GIFT_CARD_TERMS_AND_CONDITIONS) + "?decorator=empty" + "&uin=" + accountManager.mUin + "&ticket=" + accountManager.mH5Ticket;
        TOUWv.loadUrl(url);
        TOUWv.getSettings().setJavaScriptEnabled(true);
        init(url);

        TOUWv.setOnKeyListener(new View.OnKeyListener() {
            @Override
            public boolean onKey(View v, int keyCode, KeyEvent event) {
                if (event.getAction() == KeyEvent.ACTION_DOWN) {
                    if (keyCode == KeyEvent.KEYCODE_BACK && TOUWv.canGoBack()) {  //表示按返回键
                        finish();   //后退
                        return true;    //已处理
                    }
                }
                return false;
            }
        });

        backTv.setOnClickListener(this);
        backIv.setOnClickListener(this);
        refreshTv.setOnClickListener(this);
        return rootView;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.tv_in_title_right:
                TOUWv.loadUrl(url);
                break;
            case R.id.tv_in_title_back_tv:
            case R.id.iv_in_title_back:
                finish();
                break;
        }
    }

    public void init(String url){
        TOUWv.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                LogUtils.d("--------------url: " + url);
                if (url != null && !url.equals(url)) {
                    finish();
                }
                view.loadUrl(url);
                return true;
            }

            @Override
            public void onPageStarted(WebView view, String url, Bitmap favicon) {
                mPb.setVisibility(View.VISIBLE);
                super.onPageStarted(view, url, favicon);
            }

            @Override
            public void onPageFinished(WebView view, String url) {
                mPb.setVisibility(View.INVISIBLE);
                super.onPageFinished(view, url);
            }
        });

        TOUWv.setWebChromeClient(new WebChromeClient() {
            @Override
            public void onProgressChanged(WebView view, int newProgress) {
                mPb.setProgress(newProgress);
                super.onProgressChanged(view, newProgress);
            }
        });
    }
}
