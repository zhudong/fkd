package com.fuexpress.kr.utils;

import com.fuexpress.kr.bean.DemandDetailBean;
import com.fuexpress.kr.bean.ItemImageBean;
import com.fuexpress.kr.bean.ProductDataBean;
import com.fuexpress.kr.bean.SysNoticeBean;
import com.fuexpress.kr.ui.view.imageselector.imsbean.Image;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import fksproto.CsBase;
import fksproto.CsNotice;
import fksproto.CsParcel;
import fksproto.CsUser;


/**
 * Created by k550 on 2016/6/12.
 */
public class ClassUtil {
    public static Object invoke(Object object, String methodName) {
        try {
            Method method = object.getClass().getMethod(methodName);
            return method.invoke(object);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }

    public static Object invoke(Object object, String methodName, Object arg) {
        try {
            Method method = object.getClass().getMethod(methodName, arg.getClass());
            return method.invoke(object, arg);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }

    public static Object invoke(Class clazz, String methodName, Object arg) {
        try {
            Method method = clazz.getMethod(methodName, arg.getClass());
            return method.invoke(null, arg);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }

    public static Object invokeInt(Object object, String methodName, int arg) {
        try {
            Method method = object.getClass().getDeclaredMethod(methodName, new Class[]{int.class});
            Object[] arguments = new Object[]{new Integer(arg)};
            return method.invoke(object, arguments);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return null;
    }
    public static SysNoticeBean conventSysNotice2SysNoticeBean(CsNotice.MesssageItemdata messsageItemdata) {
        SysNoticeBean sysNoticeBean = new SysNoticeBean();
        sysNoticeBean.coreMsgId = messsageItemdata.getCoreMsgId();
        sysNoticeBean.title = messsageItemdata.getTitile();
        sysNoticeBean.sendTimeStr = messsageItemdata.getSendTimestr();
        sysNoticeBean.isRead = messsageItemdata.getIsReaded();
        return sysNoticeBean;
    }

    public static List<SysNoticeBean> conventSysNotceList2SysNoticeBeanList(List<CsNotice.MesssageItemdata> messsageItemdatas) {
        List<SysNoticeBean> sysNoticeBeans = new ArrayList<>();
        for (CsNotice.MesssageItemdata messsageItemdata : messsageItemdatas) {
            sysNoticeBeans.add(conventSysNotice2SysNoticeBean(messsageItemdata));
        }
        return sysNoticeBeans;
    }
    public static DemandDetailBean conventHelpMyGetInfoResponse2DemandDetailBean(CsUser.HelpMyGetInfoResponse helpMyGetInfoResponse){
        DemandDetailBean detailBean=new DemandDetailBean();
        detailBean.salesrequireid=helpMyGetInfoResponse.getSalesrequireid();
        detailBean.createtime=helpMyGetInfoResponse.getCreatetime();
        detailBean.requiretype=helpMyGetInfoResponse.getRequiretype();
        detailBean.status=helpMyGetInfoResponse.getStatus();
        detailBean.description=helpMyGetInfoResponse.getDescription();
        detailBean.price=helpMyGetInfoResponse.getPrice();
        detailBean.remark=helpMyGetInfoResponse.getRemark();
        detailBean.servicefee=helpMyGetInfoResponse.getServicefee();
        detailBean.address=helpMyGetInfoResponse.getAddress();
        detailBean.qty=helpMyGetInfoResponse.getQty();
        detailBean.paymentcode=helpMyGetInfoResponse.getPaymentcode();
        detailBean.subtotal=helpMyGetInfoResponse.getSubtotal();
        detailBean.shippingname=helpMyGetInfoResponse.getShippingname();
        detailBean.shippingphone=helpMyGetInfoResponse.getShippingphone();
        detailBean.shippingaddress=helpMyGetInfoResponse.getShippingaddress();
        detailBean.imagesurl=helpMyGetInfoResponse.getImagesurlList();
        return detailBean;
    }
    public static DemandDetailBean conventhelpMyReceiveInfoResponse2DemandDetailBean(CsUser.helpMyReceiveInfoResponse helpMyReceiveInfoResponse){
        DemandDetailBean detailBean=new DemandDetailBean();
        detailBean.salesrequireid=helpMyReceiveInfoResponse.getSalesrequireid();
        detailBean.createtime=helpMyReceiveInfoResponse.getCreatetime();
        detailBean.requiretype=helpMyReceiveInfoResponse.getRequiretype();
        detailBean.status=helpMyReceiveInfoResponse.getStatus();
        detailBean.description=helpMyReceiveInfoResponse.getDescription();
        detailBean.price=helpMyReceiveInfoResponse.getPrice();
        detailBean.remark=helpMyReceiveInfoResponse.getRemark();
        detailBean.qty=helpMyReceiveInfoResponse.getQty();

        detailBean.warehouseid=helpMyReceiveInfoResponse.getWarehouseid();
        detailBean.warehousename=helpMyReceiveInfoResponse.getWarehousename();

        detailBean.subtotal=helpMyReceiveInfoResponse.getSubtotal();
        detailBean.shippingname=helpMyReceiveInfoResponse.getShippingname();
        detailBean.shippingphone=helpMyReceiveInfoResponse.getShippingphone();
        detailBean.shippingaddress=helpMyReceiveInfoResponse.getShippingaddress();
        detailBean.imagesurl=helpMyReceiveInfoResponse.getImagesurlList();
        return detailBean;
    }
    public static DemandDetailBean conventhelpMyBuyInfoResponse2DemandDetailBean(CsUser.helpMyBuyInfoResponse helpMyGetInfoResponse){
        DemandDetailBean detailBean=new DemandDetailBean();
        detailBean.salesrequireid=helpMyGetInfoResponse.getSalesrequireid();
        detailBean.createtime=helpMyGetInfoResponse.getCreatetime();
        detailBean.requiretype=helpMyGetInfoResponse.getRequiretype();
        detailBean.status=helpMyGetInfoResponse.getStatus();
        detailBean.description=helpMyGetInfoResponse.getDescription();
        detailBean.price=helpMyGetInfoResponse.getPrice();
        detailBean.remark=helpMyGetInfoResponse.getRemark();
        detailBean.servicefee=helpMyGetInfoResponse.getServicefee();
    //    detailBean.address=helpMyGetInfoResponse.getAddress();
        detailBean.qty=helpMyGetInfoResponse.getQty();
        detailBean.paymentcode=helpMyGetInfoResponse.getPaymentcode();
        detailBean.subtotal=helpMyGetInfoResponse.getSubtotal();
        detailBean.shippingname=helpMyGetInfoResponse.getShippingname();
        detailBean.shippingphone=helpMyGetInfoResponse.getShippingphone();
        detailBean.shippingaddress=helpMyGetInfoResponse.getShippingaddress();
        detailBean.imagesurl=helpMyGetInfoResponse.getImagesurlList();
        return detailBean;
    }
    public static ItemImageBean conventItemImage2Bean(CsBase.ItemImage itemImage){
        ItemImageBean bean=new ItemImageBean();
        bean.setImage_ratio(itemImage.getImageRatio());
        bean.setImage_url(itemImage.getImageUrl());
        return bean;
    }
    public static List<ItemImageBean> conventItemImageList2List(List<CsBase.ItemImage> list){
        List<ItemImageBean> beanList=new ArrayList<>();
        for(CsBase.ItemImage bean:list){
            beanList.add(conventItemImage2Bean(bean));
        }
        return beanList;
    }
    public static ProductDataBean conventProductData2Bean(CsParcel.ProductDataList list){
        ProductDataBean bean=new ProductDataBean();
        bean.setProductname(list.getProductname());
        bean.setProductdescription(list.getProductdescription());
        bean.setProductremark(list.getProductremark());
        bean.setWarehouseid(list.getWarehouseid());
        bean.setAddressinfo(list.getAddressinfo());
        bean.setPrice(list.getPrice());
        bean.setNum(list.getNum());
        bean.setImage_num(list.getImageNum());
        bean.setExtra(conventItemImageList2List(list.getExtraList()));
        return bean;
    }
    public static List<ProductDataBean> conventProductDataList2List(List<CsParcel.ProductDataList> lists){
        List<ProductDataBean> beanList=new ArrayList<>();
        for(CsParcel.ProductDataList bean:lists){
            beanList.add(conventProductData2Bean(bean));
        }
        return beanList;
    }
    public static CsBase.ItemImage conventBean2Item(ItemImageBean bean){
        CsBase.ItemImage.Builder builder=CsBase.ItemImage.newBuilder();
        builder.setImageRatio(bean.getImage_ratio());
        builder.setImageUrl(bean.getImage_url());
        return builder.build();
    }
    public static List<CsBase.ItemImage> conventBeanList2List(List<ItemImageBean> been){
        List<CsBase.ItemImage> itemImages=new ArrayList<>();
        for(ItemImageBean bean:been){
            itemImages.add(conventBean2Item(bean));
        }
        return itemImages;
    }
    public static CsParcel.ProductDataList conventProductDataBean2Data(ProductDataBean bean){
        CsParcel.ProductDataList.Builder builder=CsParcel.ProductDataList.newBuilder();
        builder.setProductname(bean.getProductname());
        builder.setProductdescription(bean.getProductdescription());
        builder.setProductremark(bean.getProductremark());
        builder.setWarehouseid(bean.getWarehouseid());
        builder.setAddressinfo(bean.getAddressinfo());
        builder.setPrice(bean.getPrice());
        builder.setNum(bean.getNum());
        for(ItemImageBean imageBean:bean.getExtra()){
            builder.addExtra(ClassUtil.conventBean2Item(imageBean));
        }
        return builder.build();
    }
    public static List<CsParcel.ProductDataList> conventProductDataBean2List(List<ProductDataBean> been){
        List<CsParcel.ProductDataList> lists=new ArrayList<>();
        for(ProductDataBean bean:been){
            lists.add(conventProductDataBean2Data(bean));
        }
        return lists;
    }

}