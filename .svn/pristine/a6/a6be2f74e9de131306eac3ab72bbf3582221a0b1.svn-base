// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_crowd.proto

package fksproto;

public final class CsCrowd {
  private CsCrowd() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code fksproto.CrowdCountType}
   *
   * <pre>
   *拼单计价类型
   * </pre>
   */
  public enum CrowdCountType
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CROWD_COUNT_TYPE_NUMBER = 1;</code>
     *
     * <pre>
     *按数量拼单
     * </pre>
     */
    CROWD_COUNT_TYPE_NUMBER(0, 1),
    /**
     * <code>CROWD_COUNT_TYPE_AMOUNT = 2;</code>
     *
     * <pre>
     *按金额拼单
     * </pre>
     */
    CROWD_COUNT_TYPE_AMOUNT(1, 2),
    ;

    /**
     * <code>CROWD_COUNT_TYPE_NUMBER = 1;</code>
     *
     * <pre>
     *按数量拼单
     * </pre>
     */
    public static final int CROWD_COUNT_TYPE_NUMBER_VALUE = 1;
    /**
     * <code>CROWD_COUNT_TYPE_AMOUNT = 2;</code>
     *
     * <pre>
     *按金额拼单
     * </pre>
     */
    public static final int CROWD_COUNT_TYPE_AMOUNT_VALUE = 2;


    public final int getNumber() { return value; }

    public static CrowdCountType valueOf(int value) {
      switch (value) {
        case 1: return CROWD_COUNT_TYPE_NUMBER;
        case 2: return CROWD_COUNT_TYPE_AMOUNT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CrowdCountType>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CrowdCountType>
            internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CrowdCountType>() {
              public CrowdCountType findValueByNumber(int number) {
                return CrowdCountType.valueOf(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return fksproto.CsCrowd.getDescriptor().getEnumTypes().get(0);
    }

    private static final CrowdCountType[] VALUES = values();

    public static CrowdCountType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CrowdCountType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fksproto.CrowdCountType)
  }

  /**
   * Protobuf enum {@code fksproto.CrowdType}
   *
   * <pre>
   *拼单类型
   * </pre>
   */
  public enum CrowdType
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CROWD_TYPE_PRODUCT = 1;</code>
     *
     * <pre>
     *按产品拼单
     * </pre>
     */
    CROWD_TYPE_PRODUCT(0, 1),
    /**
     * <code>CROWD_TYPE_ITEM = 2;</code>
     *
     * <pre>
     *按单品拼单
     * </pre>
     */
    CROWD_TYPE_ITEM(1, 2),
    ;

    /**
     * <code>CROWD_TYPE_PRODUCT = 1;</code>
     *
     * <pre>
     *按产品拼单
     * </pre>
     */
    public static final int CROWD_TYPE_PRODUCT_VALUE = 1;
    /**
     * <code>CROWD_TYPE_ITEM = 2;</code>
     *
     * <pre>
     *按单品拼单
     * </pre>
     */
    public static final int CROWD_TYPE_ITEM_VALUE = 2;


    public final int getNumber() { return value; }

    public static CrowdType valueOf(int value) {
      switch (value) {
        case 1: return CROWD_TYPE_PRODUCT;
        case 2: return CROWD_TYPE_ITEM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CrowdType>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CrowdType>
            internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CrowdType>() {
              public CrowdType findValueByNumber(int number) {
                return CrowdType.valueOf(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return fksproto.CsCrowd.getDescriptor().getEnumTypes().get(1);
    }

    private static final CrowdType[] VALUES = values();

    public static CrowdType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CrowdType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fksproto.CrowdType)
  }

  /**
   * Protobuf enum {@code fksproto.CrowdState}
   *
   * <pre>
   *拼单状态
   * </pre>
   */
  public enum CrowdState
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CROWD_STATE_NONE = 0;</code>
     */
    CROWD_STATE_NONE(0, 0),
    /**
     * <code>CROWD_STATE_PENDING = 1;</code>
     *
     * <pre>
     *待发布
     * </pre>
     */
    CROWD_STATE_PENDING(1, 1),
    /**
     * <code>CROWD_STATE_CROWDING = 2;</code>
     *
     * <pre>
     *拼单中
     * </pre>
     */
    CROWD_STATE_CROWDING(2, 2),
    /**
     * <code>CROWD_STATE_SUCCESS = 3;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    CROWD_STATE_SUCCESS(3, 3),
    /**
     * <code>CROWD_STATE_FAILED = 4;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    CROWD_STATE_FAILED(4, 4),
    /**
     * <code>CROWD_STATE_CHECKING = 5;</code>
     *
     * <pre>
     *拼单草稿
     * </pre>
     */
    CROWD_STATE_CHECKING(5, 5),
    ;

    /**
     * <code>CROWD_STATE_NONE = 0;</code>
     */
    public static final int CROWD_STATE_NONE_VALUE = 0;
    /**
     * <code>CROWD_STATE_PENDING = 1;</code>
     *
     * <pre>
     *待发布
     * </pre>
     */
    public static final int CROWD_STATE_PENDING_VALUE = 1;
    /**
     * <code>CROWD_STATE_CROWDING = 2;</code>
     *
     * <pre>
     *拼单中
     * </pre>
     */
    public static final int CROWD_STATE_CROWDING_VALUE = 2;
    /**
     * <code>CROWD_STATE_SUCCESS = 3;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    public static final int CROWD_STATE_SUCCESS_VALUE = 3;
    /**
     * <code>CROWD_STATE_FAILED = 4;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    public static final int CROWD_STATE_FAILED_VALUE = 4;
    /**
     * <code>CROWD_STATE_CHECKING = 5;</code>
     *
     * <pre>
     *拼单草稿
     * </pre>
     */
    public static final int CROWD_STATE_CHECKING_VALUE = 5;


    public final int getNumber() { return value; }

    public static CrowdState valueOf(int value) {
      switch (value) {
        case 0: return CROWD_STATE_NONE;
        case 1: return CROWD_STATE_PENDING;
        case 2: return CROWD_STATE_CROWDING;
        case 3: return CROWD_STATE_SUCCESS;
        case 4: return CROWD_STATE_FAILED;
        case 5: return CROWD_STATE_CHECKING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CrowdState>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CrowdState>
            internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CrowdState>() {
              public CrowdState findValueByNumber(int number) {
                return CrowdState.valueOf(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return fksproto.CsCrowd.getDescriptor().getEnumTypes().get(2);
    }

    private static final CrowdState[] VALUES = values();

    public static CrowdState valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CrowdState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fksproto.CrowdState)
  }

  public interface CrowdLadderOrBuilder extends
          // @@protoc_insertion_point(interface_extends:fksproto.CrowdLadder)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float goal = 1;</code>
     *
     * <pre>
     *目标
     * </pre>
     */
    boolean hasGoal();
    /**
     * <code>optional float goal = 1;</code>
     *
     * <pre>
     *目标
     * </pre>
     */
    float getGoal();

    /**
     * <code>optional int32 discount_type = 2;</code>
     *
     * <pre>
     *折扣类型, 1:定值，2:百分比
     * </pre>
     */
    boolean hasDiscountType();
    /**
     * <code>optional int32 discount_type = 2;</code>
     *
     * <pre>
     *折扣类型, 1:定值，2:百分比
     * </pre>
     */
    int getDiscountType();

    /**
     * <code>optional float discount = 3;</code>
     *
     * <pre>
     *折扣
     * </pre>
     */
    boolean hasDiscount();
    /**
     * <code>optional float discount = 3;</code>
     *
     * <pre>
     *折扣
     * </pre>
     */
    float getDiscount();
  }
  /**
   * Protobuf type {@code fksproto.CrowdLadder}
   *
   * <pre>
   *拼单阶段
   * </pre>
   */
  public static final class CrowdLadder extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:fksproto.CrowdLadder)
          CrowdLadderOrBuilder {
    // Use CrowdLadder.newBuilder() to construct.
    private CrowdLadder(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CrowdLadder(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CrowdLadder defaultInstance;
    public static CrowdLadder getDefaultInstance() {
      return defaultInstance;
    }

    public CrowdLadder getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CrowdLadder(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              goal_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              discountType_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              discount_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return fksproto.CsCrowd.internal_static_fksproto_CrowdLadder_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return fksproto.CsCrowd.internal_static_fksproto_CrowdLadder_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      fksproto.CsCrowd.CrowdLadder.class, fksproto.CsCrowd.CrowdLadder.Builder.class);
    }

    public static com.google.protobuf.Parser<CrowdLadder> PARSER =
            new com.google.protobuf.AbstractParser<CrowdLadder>() {
              public CrowdLadder parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new CrowdLadder(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<CrowdLadder> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int GOAL_FIELD_NUMBER = 1;
    private float goal_;
    /**
     * <code>optional float goal = 1;</code>
     *
     * <pre>
     *目标
     * </pre>
     */
    public boolean hasGoal() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional float goal = 1;</code>
     *
     * <pre>
     *目标
     * </pre>
     */
    public float getGoal() {
      return goal_;
    }

    public static final int DISCOUNT_TYPE_FIELD_NUMBER = 2;
    private int discountType_;
    /**
     * <code>optional int32 discount_type = 2;</code>
     *
     * <pre>
     *折扣类型, 1:定值，2:百分比
     * </pre>
     */
    public boolean hasDiscountType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 discount_type = 2;</code>
     *
     * <pre>
     *折扣类型, 1:定值，2:百分比
     * </pre>
     */
    public int getDiscountType() {
      return discountType_;
    }

    public static final int DISCOUNT_FIELD_NUMBER = 3;
    private float discount_;
    /**
     * <code>optional float discount = 3;</code>
     *
     * <pre>
     *折扣
     * </pre>
     */
    public boolean hasDiscount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float discount = 3;</code>
     *
     * <pre>
     *折扣
     * </pre>
     */
    public float getDiscount() {
      return discount_;
    }

    private void initFields() {
      goal_ = 0F;
      discountType_ = 0;
      discount_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, goal_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, discountType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, discount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(1, goal_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, discountType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(3, discount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fksproto.CsCrowd.CrowdLadder parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fksproto.CsCrowd.CrowdLadder parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fksproto.CsCrowd.CrowdLadder parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fksproto.CsCrowd.CrowdLadder parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fksproto.CsCrowd.CrowdLadder parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fksproto.CsCrowd.CrowdLadder parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fksproto.CsCrowd.CrowdLadder parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fksproto.CsCrowd.CrowdLadder parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fksproto.CsCrowd.CrowdLadder parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fksproto.CsCrowd.CrowdLadder parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fksproto.CsCrowd.CrowdLadder prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fksproto.CrowdLadder}
     *
     * <pre>
     *拼单阶段
     * </pre>
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:fksproto.CrowdLadder)
            fksproto.CsCrowd.CrowdLadderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return fksproto.CsCrowd.internal_static_fksproto_CrowdLadder_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return fksproto.CsCrowd.internal_static_fksproto_CrowdLadder_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        fksproto.CsCrowd.CrowdLadder.class, fksproto.CsCrowd.CrowdLadder.Builder.class);
      }

      // Construct using fksproto.CsCrowd.CrowdLadder.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        goal_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        discountType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        discount_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return fksproto.CsCrowd.internal_static_fksproto_CrowdLadder_descriptor;
      }

      public fksproto.CsCrowd.CrowdLadder getDefaultInstanceForType() {
        return fksproto.CsCrowd.CrowdLadder.getDefaultInstance();
      }

      public fksproto.CsCrowd.CrowdLadder build() {
        fksproto.CsCrowd.CrowdLadder result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fksproto.CsCrowd.CrowdLadder buildPartial() {
        fksproto.CsCrowd.CrowdLadder result = new fksproto.CsCrowd.CrowdLadder(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.goal_ = goal_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.discountType_ = discountType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.discount_ = discount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fksproto.CsCrowd.CrowdLadder) {
          return mergeFrom((fksproto.CsCrowd.CrowdLadder)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fksproto.CsCrowd.CrowdLadder other) {
        if (other == fksproto.CsCrowd.CrowdLadder.getDefaultInstance()) return this;
        if (other.hasGoal()) {
          setGoal(other.getGoal());
        }
        if (other.hasDiscountType()) {
          setDiscountType(other.getDiscountType());
        }
        if (other.hasDiscount()) {
          setDiscount(other.getDiscount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        fksproto.CsCrowd.CrowdLadder parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fksproto.CsCrowd.CrowdLadder) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float goal_ ;
      /**
       * <code>optional float goal = 1;</code>
       *
       * <pre>
       *目标
       * </pre>
       */
      public boolean hasGoal() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float goal = 1;</code>
       *
       * <pre>
       *目标
       * </pre>
       */
      public float getGoal() {
        return goal_;
      }
      /**
       * <code>optional float goal = 1;</code>
       *
       * <pre>
       *目标
       * </pre>
       */
      public Builder setGoal(float value) {
        bitField0_ |= 0x00000001;
        goal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float goal = 1;</code>
       *
       * <pre>
       *目标
       * </pre>
       */
      public Builder clearGoal() {
        bitField0_ = (bitField0_ & ~0x00000001);
        goal_ = 0F;
        onChanged();
        return this;
      }

      private int discountType_ ;
      /**
       * <code>optional int32 discount_type = 2;</code>
       *
       * <pre>
       *折扣类型, 1:定值，2:百分比
       * </pre>
       */
      public boolean hasDiscountType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 discount_type = 2;</code>
       *
       * <pre>
       *折扣类型, 1:定值，2:百分比
       * </pre>
       */
      public int getDiscountType() {
        return discountType_;
      }
      /**
       * <code>optional int32 discount_type = 2;</code>
       *
       * <pre>
       *折扣类型, 1:定值，2:百分比
       * </pre>
       */
      public Builder setDiscountType(int value) {
        bitField0_ |= 0x00000002;
        discountType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 discount_type = 2;</code>
       *
       * <pre>
       *折扣类型, 1:定值，2:百分比
       * </pre>
       */
      public Builder clearDiscountType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        discountType_ = 0;
        onChanged();
        return this;
      }

      private float discount_ ;
      /**
       * <code>optional float discount = 3;</code>
       *
       * <pre>
       *折扣
       * </pre>
       */
      public boolean hasDiscount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float discount = 3;</code>
       *
       * <pre>
       *折扣
       * </pre>
       */
      public float getDiscount() {
        return discount_;
      }
      /**
       * <code>optional float discount = 3;</code>
       *
       * <pre>
       *折扣
       * </pre>
       */
      public Builder setDiscount(float value) {
        bitField0_ |= 0x00000004;
        discount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float discount = 3;</code>
       *
       * <pre>
       *折扣
       * </pre>
       */
      public Builder clearDiscount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        discount_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fksproto.CrowdLadder)
    }

    static {
      defaultInstance = new CrowdLadder(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fksproto.CrowdLadder)
  }

  public interface CrowdOrBuilder extends
          // @@protoc_insertion_point(interface_extends:fksproto.Crowd)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 crowd_id = 1;</code>
     *
     * <pre>
     *拼单Id
     * </pre>
     */
    boolean hasCrowdId();
    /**
     * <code>required int64 crowd_id = 1;</code>
     *
     * <pre>
     *拼单Id
     * </pre>
     */
    long getCrowdId();

    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *拼单名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *拼单名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *拼单名称
     * </pre>
     */
    com.google.protobuf.ByteString
    getNameBytes();

    /**
     * <code>optional string title = 3;</code>
     *
     * <pre>
     *拼单标题
     * </pre>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 3;</code>
     *
     * <pre>
     *拼单标题
     * </pre>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 3;</code>
     *
     * <pre>
     *拼单标题
     * </pre>
     */
    com.google.protobuf.ByteString
    getTitleBytes();

    /**
     * <code>optional string logo = 4;</code>
     *
     * <pre>
     *拼单Logo
     * </pre>
     */
    boolean hasLogo();
    /**
     * <code>optional string logo = 4;</code>
     *
     * <pre>
     *拼单Logo
     * </pre>
     */
    java.lang.String getLogo();
    /**
     * <code>optional string logo = 4;</code>
     *
     * <pre>
     *拼单Logo
     * </pre>
     */
    com.google.protobuf.ByteString
    getLogoBytes();

    /**
     * <code>optional int32 crowd_type = 5;</code>
     *
     * <pre>
     *拼单类型
     * </pre>
     */
    boolean hasCrowdType();
    /**
     * <code>optional int32 crowd_type = 5;</code>
     *
     * <pre>
     *拼单类型
     * </pre>
     */
    int getCrowdType();

    /**
     * <code>optional int32 count_type = 6;</code>
     *
     * <pre>
     *计价类型
     * </pre>
     */
    boolean hasCountType();
    /**
     * <code>optional int32 count_type = 6;</code>
     *
     * <pre>
     *计价类型
     * </pre>
     */
    int getCountType();

    /**
     * <code>optional int32 begin_time = 7;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    boolean hasBeginTime();
    /**
     * <code>optional int32 begin_time = 7;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    int getBeginTime();

    /**
     * <code>optional int32 end_time = 8;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>optional int32 end_time = 8;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    int getEndTime();

    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    java.util.List<fksproto.CsCrowd.CrowdLadder>
    getLaddersList();
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    fksproto.CsCrowd.CrowdLadder getLadders(int index);
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    int getLaddersCount();
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    java.util.List<? extends fksproto.CsCrowd.CrowdLadderOrBuilder>
    getLaddersOrBuilderList();
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    fksproto.CsCrowd.CrowdLadderOrBuilder getLaddersOrBuilder(
            int index);

    /**
     * <code>optional float complete = 10;</code>
     *
     * <pre>
     *完成值
     * </pre>
     */
    boolean hasComplete();
    /**
     * <code>optional float complete = 10;</code>
     *
     * <pre>
     *完成值
     * </pre>
     */
    float getComplete();

    /**
     * <code>optional int32 state = 11;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    boolean hasState();
    /**
     * <code>optional int32 state = 11;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    int getState();

    /**
     * <code>optional string currency_code = 12;</code>
     *
     * <pre>
     *返回的默认币种
     * </pre>
     */
    boolean hasCurrencyCode();
    /**
     * <code>optional string currency_code = 12;</code>
     *
     * <pre>
     *返回的默认币种
     * </pre>
     */
    java.lang.String getCurrencyCode();
    /**
     * <code>optional string currency_code = 12;</code>
     *
     * <pre>
     *返回的默认币种
     * </pre>
     */
    com.google.protobuf.ByteString
    getCurrencyCodeBytes();
  }
  /**
   * Protobuf type {@code fksproto.Crowd}
   *
   * <pre>
   *拼单基本信息
   * </pre>
   */
  public static final class Crowd extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:fksproto.Crowd)
          CrowdOrBuilder {
    // Use Crowd.newBuilder() to construct.
    private Crowd(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Crowd(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Crowd defaultInstance;
    public static Crowd getDefaultInstance() {
      return defaultInstance;
    }

    public Crowd getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Crowd(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              crowdId_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              title_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              logo_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              crowdType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              countType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              beginTime_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              endTime_ = input.readInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                ladders_ = new java.util.ArrayList<fksproto.CsCrowd.CrowdLadder>();
                mutable_bitField0_ |= 0x00000100;
              }
              ladders_.add(input.readMessage(fksproto.CsCrowd.CrowdLadder.PARSER, extensionRegistry));
              break;
            }
            case 85: {
              bitField0_ |= 0x00000100;
              complete_ = input.readFloat();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              state_ = input.readInt32();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              currencyCode_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          ladders_ = java.util.Collections.unmodifiableList(ladders_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return fksproto.CsCrowd.internal_static_fksproto_Crowd_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return fksproto.CsCrowd.internal_static_fksproto_Crowd_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      fksproto.CsCrowd.Crowd.class, fksproto.CsCrowd.Crowd.Builder.class);
    }

    public static com.google.protobuf.Parser<Crowd> PARSER =
            new com.google.protobuf.AbstractParser<Crowd>() {
              public Crowd parsePartialFrom(
                      com.google.protobuf.CodedInputStream input,
                      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                      throws com.google.protobuf.InvalidProtocolBufferException {
                return new Crowd(input, extensionRegistry);
              }
            };

    @java.lang.Override
    public com.google.protobuf.Parser<Crowd> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CROWD_ID_FIELD_NUMBER = 1;
    private long crowdId_;
    /**
     * <code>required int64 crowd_id = 1;</code>
     *
     * <pre>
     *拼单Id
     * </pre>
     */
    public boolean hasCrowdId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 crowd_id = 1;</code>
     *
     * <pre>
     *拼单Id
     * </pre>
     */
    public long getCrowdId() {
      return crowdId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *拼单名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *拼单名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *拼单名称
     * </pre>
     */
    public com.google.protobuf.ByteString
    getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TITLE_FIELD_NUMBER = 3;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 3;</code>
     *
     * <pre>
     *拼单标题
     * </pre>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string title = 3;</code>
     *
     * <pre>
     *拼单标题
     * </pre>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 3;</code>
     *
     * <pre>
     *拼单标题
     * </pre>
     */
    public com.google.protobuf.ByteString
    getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGO_FIELD_NUMBER = 4;
    private java.lang.Object logo_;
    /**
     * <code>optional string logo = 4;</code>
     *
     * <pre>
     *拼单Logo
     * </pre>
     */
    public boolean hasLogo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string logo = 4;</code>
     *
     * <pre>
     *拼单Logo
     * </pre>
     */
    public java.lang.String getLogo() {
      java.lang.Object ref = logo_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          logo_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string logo = 4;</code>
     *
     * <pre>
     *拼单Logo
     * </pre>
     */
    public com.google.protobuf.ByteString
    getLogoBytes() {
      java.lang.Object ref = logo_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        logo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CROWD_TYPE_FIELD_NUMBER = 5;
    private int crowdType_;
    /**
     * <code>optional int32 crowd_type = 5;</code>
     *
     * <pre>
     *拼单类型
     * </pre>
     */
    public boolean hasCrowdType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 crowd_type = 5;</code>
     *
     * <pre>
     *拼单类型
     * </pre>
     */
    public int getCrowdType() {
      return crowdType_;
    }

    public static final int COUNT_TYPE_FIELD_NUMBER = 6;
    private int countType_;
    /**
     * <code>optional int32 count_type = 6;</code>
     *
     * <pre>
     *计价类型
     * </pre>
     */
    public boolean hasCountType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 count_type = 6;</code>
     *
     * <pre>
     *计价类型
     * </pre>
     */
    public int getCountType() {
      return countType_;
    }

    public static final int BEGIN_TIME_FIELD_NUMBER = 7;
    private int beginTime_;
    /**
     * <code>optional int32 begin_time = 7;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public boolean hasBeginTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 begin_time = 7;</code>
     *
     * <pre>
     *开始时间
     * </pre>
     */
    public int getBeginTime() {
      return beginTime_;
    }

    public static final int END_TIME_FIELD_NUMBER = 8;
    private int endTime_;
    /**
     * <code>optional int32 end_time = 8;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 end_time = 8;</code>
     *
     * <pre>
     *结束时间
     * </pre>
     */
    public int getEndTime() {
      return endTime_;
    }

    public static final int LADDERS_FIELD_NUMBER = 9;
    private java.util.List<fksproto.CsCrowd.CrowdLadder> ladders_;
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    public java.util.List<fksproto.CsCrowd.CrowdLadder> getLaddersList() {
      return ladders_;
    }
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    public java.util.List<? extends fksproto.CsCrowd.CrowdLadderOrBuilder>
    getLaddersOrBuilderList() {
      return ladders_;
    }
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    public int getLaddersCount() {
      return ladders_.size();
    }
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    public fksproto.CsCrowd.CrowdLadder getLadders(int index) {
      return ladders_.get(index);
    }
    /**
     * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
     *
     * <pre>
     *阶段信息
     * </pre>
     */
    public fksproto.CsCrowd.CrowdLadderOrBuilder getLaddersOrBuilder(
            int index) {
      return ladders_.get(index);
    }

    public static final int COMPLETE_FIELD_NUMBER = 10;
    private float complete_;
    /**
     * <code>optional float complete = 10;</code>
     *
     * <pre>
     *完成值
     * </pre>
     */
    public boolean hasComplete() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float complete = 10;</code>
     *
     * <pre>
     *完成值
     * </pre>
     */
    public float getComplete() {
      return complete_;
    }

    public static final int STATE_FIELD_NUMBER = 11;
    private int state_;
    /**
     * <code>optional int32 state = 11;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 state = 11;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    public int getState() {
      return state_;
    }

    public static final int CURRENCY_CODE_FIELD_NUMBER = 12;
    private java.lang.Object currencyCode_;
    /**
     * <code>optional string currency_code = 12;</code>
     *
     * <pre>
     *返回的默认币种
     * </pre>
     */
    public boolean hasCurrencyCode() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string currency_code = 12;</code>
     *
     * <pre>
     *返回的默认币种
     * </pre>
     */
    public java.lang.String getCurrencyCode() {
      java.lang.Object ref = currencyCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          currencyCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string currency_code = 12;</code>
     *
     * <pre>
     *返回的默认币种
     * </pre>
     */
    public com.google.protobuf.ByteString
    getCurrencyCodeBytes() {
      java.lang.Object ref = currencyCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        currencyCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      crowdId_ = 0L;
      name_ = "";
      title_ = "";
      logo_ = "";
      crowdType_ = 0;
      countType_ = 0;
      beginTime_ = 0;
      endTime_ = 0;
      ladders_ = java.util.Collections.emptyList();
      complete_ = 0F;
      state_ = 0;
      currencyCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCrowdId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, crowdId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getLogoBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, crowdType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, countType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, beginTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, endTime_);
      }
      for (int i = 0; i < ladders_.size(); i++) {
        output.writeMessage(9, ladders_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(10, complete_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, state_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getCurrencyCodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(1, crowdId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(4, getLogoBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, crowdType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(6, countType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(7, beginTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(8, endTime_);
      }
      for (int i = 0; i < ladders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(9, ladders_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeFloatSize(10, complete_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(11, state_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(12, getCurrencyCodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fksproto.CsCrowd.Crowd parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fksproto.CsCrowd.Crowd parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fksproto.CsCrowd.Crowd parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fksproto.CsCrowd.Crowd parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fksproto.CsCrowd.Crowd parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fksproto.CsCrowd.Crowd parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fksproto.CsCrowd.Crowd parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fksproto.CsCrowd.Crowd parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fksproto.CsCrowd.Crowd parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fksproto.CsCrowd.Crowd parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fksproto.CsCrowd.Crowd prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fksproto.Crowd}
     *
     * <pre>
     *拼单基本信息
     * </pre>
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:fksproto.Crowd)
            fksproto.CsCrowd.CrowdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return fksproto.CsCrowd.internal_static_fksproto_Crowd_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return fksproto.CsCrowd.internal_static_fksproto_Crowd_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        fksproto.CsCrowd.Crowd.class, fksproto.CsCrowd.Crowd.Builder.class);
      }

      // Construct using fksproto.CsCrowd.Crowd.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLaddersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        crowdId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        logo_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        crowdType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        countType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        beginTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        endTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (laddersBuilder_ == null) {
          ladders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          laddersBuilder_.clear();
        }
        complete_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        currencyCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return fksproto.CsCrowd.internal_static_fksproto_Crowd_descriptor;
      }

      public fksproto.CsCrowd.Crowd getDefaultInstanceForType() {
        return fksproto.CsCrowd.Crowd.getDefaultInstance();
      }

      public fksproto.CsCrowd.Crowd build() {
        fksproto.CsCrowd.Crowd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fksproto.CsCrowd.Crowd buildPartial() {
        fksproto.CsCrowd.Crowd result = new fksproto.CsCrowd.Crowd(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.crowdId_ = crowdId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.logo_ = logo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.crowdType_ = crowdType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.countType_ = countType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.beginTime_ = beginTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.endTime_ = endTime_;
        if (laddersBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            ladders_ = java.util.Collections.unmodifiableList(ladders_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.ladders_ = ladders_;
        } else {
          result.ladders_ = laddersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.complete_ = complete_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.currencyCode_ = currencyCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fksproto.CsCrowd.Crowd) {
          return mergeFrom((fksproto.CsCrowd.Crowd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fksproto.CsCrowd.Crowd other) {
        if (other == fksproto.CsCrowd.Crowd.getDefaultInstance()) return this;
        if (other.hasCrowdId()) {
          setCrowdId(other.getCrowdId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000004;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasLogo()) {
          bitField0_ |= 0x00000008;
          logo_ = other.logo_;
          onChanged();
        }
        if (other.hasCrowdType()) {
          setCrowdType(other.getCrowdType());
        }
        if (other.hasCountType()) {
          setCountType(other.getCountType());
        }
        if (other.hasBeginTime()) {
          setBeginTime(other.getBeginTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (laddersBuilder_ == null) {
          if (!other.ladders_.isEmpty()) {
            if (ladders_.isEmpty()) {
              ladders_ = other.ladders_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureLaddersIsMutable();
              ladders_.addAll(other.ladders_);
            }
            onChanged();
          }
        } else {
          if (!other.ladders_.isEmpty()) {
            if (laddersBuilder_.isEmpty()) {
              laddersBuilder_.dispose();
              laddersBuilder_ = null;
              ladders_ = other.ladders_;
              bitField0_ = (bitField0_ & ~0x00000100);
              laddersBuilder_ =
                      com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                              getLaddersFieldBuilder() : null;
            } else {
              laddersBuilder_.addAllMessages(other.ladders_);
            }
          }
        }
        if (other.hasComplete()) {
          setComplete(other.getComplete());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasCurrencyCode()) {
          bitField0_ |= 0x00000800;
          currencyCode_ = other.currencyCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCrowdId()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        fksproto.CsCrowd.Crowd parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fksproto.CsCrowd.Crowd) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long crowdId_ ;
      /**
       * <code>required int64 crowd_id = 1;</code>
       *
       * <pre>
       *拼单Id
       * </pre>
       */
      public boolean hasCrowdId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 crowd_id = 1;</code>
       *
       * <pre>
       *拼单Id
       * </pre>
       */
      public long getCrowdId() {
        return crowdId_;
      }
      /**
       * <code>required int64 crowd_id = 1;</code>
       *
       * <pre>
       *拼单Id
       * </pre>
       */
      public Builder setCrowdId(long value) {
        bitField0_ |= 0x00000001;
        crowdId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 crowd_id = 1;</code>
       *
       * <pre>
       *拼单Id
       * </pre>
       */
      public Builder clearCrowdId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        crowdId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *拼单名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *拼单名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *拼单名称
       * </pre>
       */
      public com.google.protobuf.ByteString
      getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *拼单名称
       * </pre>
       */
      public Builder setName(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *拼单名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *拼单名称
       * </pre>
       */
      public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 3;</code>
       *
       * <pre>
       *拼单标题
       * </pre>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string title = 3;</code>
       *
       * <pre>
       *拼单标题
       * </pre>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            title_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 3;</code>
       *
       * <pre>
       *拼单标题
       * </pre>
       */
      public com.google.protobuf.ByteString
      getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 3;</code>
       *
       * <pre>
       *拼单标题
       * </pre>
       */
      public Builder setTitle(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 3;</code>
       *
       * <pre>
       *拼单标题
       * </pre>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 3;</code>
       *
       * <pre>
       *拼单标题
       * </pre>
       */
      public Builder setTitleBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        title_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object logo_ = "";
      /**
       * <code>optional string logo = 4;</code>
       *
       * <pre>
       *拼单Logo
       * </pre>
       */
      public boolean hasLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string logo = 4;</code>
       *
       * <pre>
       *拼单Logo
       * </pre>
       */
      public java.lang.String getLogo() {
        java.lang.Object ref = logo_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            logo_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string logo = 4;</code>
       *
       * <pre>
       *拼单Logo
       * </pre>
       */
      public com.google.protobuf.ByteString
      getLogoBytes() {
        java.lang.Object ref = logo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          logo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string logo = 4;</code>
       *
       * <pre>
       *拼单Logo
       * </pre>
       */
      public Builder setLogo(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        logo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string logo = 4;</code>
       *
       * <pre>
       *拼单Logo
       * </pre>
       */
      public Builder clearLogo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        logo_ = getDefaultInstance().getLogo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string logo = 4;</code>
       *
       * <pre>
       *拼单Logo
       * </pre>
       */
      public Builder setLogoBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        logo_ = value;
        onChanged();
        return this;
      }

      private int crowdType_ ;
      /**
       * <code>optional int32 crowd_type = 5;</code>
       *
       * <pre>
       *拼单类型
       * </pre>
       */
      public boolean hasCrowdType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 crowd_type = 5;</code>
       *
       * <pre>
       *拼单类型
       * </pre>
       */
      public int getCrowdType() {
        return crowdType_;
      }
      /**
       * <code>optional int32 crowd_type = 5;</code>
       *
       * <pre>
       *拼单类型
       * </pre>
       */
      public Builder setCrowdType(int value) {
        bitField0_ |= 0x00000010;
        crowdType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 crowd_type = 5;</code>
       *
       * <pre>
       *拼单类型
       * </pre>
       */
      public Builder clearCrowdType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        crowdType_ = 0;
        onChanged();
        return this;
      }

      private int countType_ ;
      /**
       * <code>optional int32 count_type = 6;</code>
       *
       * <pre>
       *计价类型
       * </pre>
       */
      public boolean hasCountType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 count_type = 6;</code>
       *
       * <pre>
       *计价类型
       * </pre>
       */
      public int getCountType() {
        return countType_;
      }
      /**
       * <code>optional int32 count_type = 6;</code>
       *
       * <pre>
       *计价类型
       * </pre>
       */
      public Builder setCountType(int value) {
        bitField0_ |= 0x00000020;
        countType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 count_type = 6;</code>
       *
       * <pre>
       *计价类型
       * </pre>
       */
      public Builder clearCountType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        countType_ = 0;
        onChanged();
        return this;
      }

      private int beginTime_ ;
      /**
       * <code>optional int32 begin_time = 7;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public boolean hasBeginTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 begin_time = 7;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public int getBeginTime() {
        return beginTime_;
      }
      /**
       * <code>optional int32 begin_time = 7;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder setBeginTime(int value) {
        bitField0_ |= 0x00000040;
        beginTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 begin_time = 7;</code>
       *
       * <pre>
       *开始时间
       * </pre>
       */
      public Builder clearBeginTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        beginTime_ = 0;
        onChanged();
        return this;
      }

      private int endTime_ ;
      /**
       * <code>optional int32 end_time = 8;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 end_time = 8;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <code>optional int32 end_time = 8;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder setEndTime(int value) {
        bitField0_ |= 0x00000080;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 end_time = 8;</code>
       *
       * <pre>
       *结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        endTime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<fksproto.CsCrowd.CrowdLadder> ladders_ =
              java.util.Collections.emptyList();
      private void ensureLaddersIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          ladders_ = new java.util.ArrayList<fksproto.CsCrowd.CrowdLadder>(ladders_);
          bitField0_ |= 0x00000100;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
              fksproto.CsCrowd.CrowdLadder, fksproto.CsCrowd.CrowdLadder.Builder, fksproto.CsCrowd.CrowdLadderOrBuilder> laddersBuilder_;

      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public java.util.List<fksproto.CsCrowd.CrowdLadder> getLaddersList() {
        if (laddersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ladders_);
        } else {
          return laddersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public int getLaddersCount() {
        if (laddersBuilder_ == null) {
          return ladders_.size();
        } else {
          return laddersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public fksproto.CsCrowd.CrowdLadder getLadders(int index) {
        if (laddersBuilder_ == null) {
          return ladders_.get(index);
        } else {
          return laddersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder setLadders(
              int index, fksproto.CsCrowd.CrowdLadder value) {
        if (laddersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLaddersIsMutable();
          ladders_.set(index, value);
          onChanged();
        } else {
          laddersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder setLadders(
              int index, fksproto.CsCrowd.CrowdLadder.Builder builderForValue) {
        if (laddersBuilder_ == null) {
          ensureLaddersIsMutable();
          ladders_.set(index, builderForValue.build());
          onChanged();
        } else {
          laddersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder addLadders(fksproto.CsCrowd.CrowdLadder value) {
        if (laddersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLaddersIsMutable();
          ladders_.add(value);
          onChanged();
        } else {
          laddersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder addLadders(
              int index, fksproto.CsCrowd.CrowdLadder value) {
        if (laddersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLaddersIsMutable();
          ladders_.add(index, value);
          onChanged();
        } else {
          laddersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder addLadders(
              fksproto.CsCrowd.CrowdLadder.Builder builderForValue) {
        if (laddersBuilder_ == null) {
          ensureLaddersIsMutable();
          ladders_.add(builderForValue.build());
          onChanged();
        } else {
          laddersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder addLadders(
              int index, fksproto.CsCrowd.CrowdLadder.Builder builderForValue) {
        if (laddersBuilder_ == null) {
          ensureLaddersIsMutable();
          ladders_.add(index, builderForValue.build());
          onChanged();
        } else {
          laddersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder addAllLadders(
              java.lang.Iterable<? extends fksproto.CsCrowd.CrowdLadder> values) {
        if (laddersBuilder_ == null) {
          ensureLaddersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, ladders_);
          onChanged();
        } else {
          laddersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder clearLadders() {
        if (laddersBuilder_ == null) {
          ladders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          laddersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public Builder removeLadders(int index) {
        if (laddersBuilder_ == null) {
          ensureLaddersIsMutable();
          ladders_.remove(index);
          onChanged();
        } else {
          laddersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public fksproto.CsCrowd.CrowdLadder.Builder getLaddersBuilder(
              int index) {
        return getLaddersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public fksproto.CsCrowd.CrowdLadderOrBuilder getLaddersOrBuilder(
              int index) {
        if (laddersBuilder_ == null) {
          return ladders_.get(index);  } else {
          return laddersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public java.util.List<? extends fksproto.CsCrowd.CrowdLadderOrBuilder>
      getLaddersOrBuilderList() {
        if (laddersBuilder_ != null) {
          return laddersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ladders_);
        }
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public fksproto.CsCrowd.CrowdLadder.Builder addLaddersBuilder() {
        return getLaddersFieldBuilder().addBuilder(
                fksproto.CsCrowd.CrowdLadder.getDefaultInstance());
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public fksproto.CsCrowd.CrowdLadder.Builder addLaddersBuilder(
              int index) {
        return getLaddersFieldBuilder().addBuilder(
                index, fksproto.CsCrowd.CrowdLadder.getDefaultInstance());
      }
      /**
       * <code>repeated .fksproto.CrowdLadder ladders = 9;</code>
       *
       * <pre>
       *阶段信息
       * </pre>
       */
      public java.util.List<fksproto.CsCrowd.CrowdLadder.Builder>
      getLaddersBuilderList() {
        return getLaddersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
              fksproto.CsCrowd.CrowdLadder, fksproto.CsCrowd.CrowdLadder.Builder, fksproto.CsCrowd.CrowdLadderOrBuilder>
      getLaddersFieldBuilder() {
        if (laddersBuilder_ == null) {
          laddersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  fksproto.CsCrowd.CrowdLadder, fksproto.CsCrowd.CrowdLadder.Builder, fksproto.CsCrowd.CrowdLadderOrBuilder>(
                  ladders_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          ladders_ = null;
        }
        return laddersBuilder_;
      }

      private float complete_ ;
      /**
       * <code>optional float complete = 10;</code>
       *
       * <pre>
       *完成值
       * </pre>
       */
      public boolean hasComplete() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float complete = 10;</code>
       *
       * <pre>
       *完成值
       * </pre>
       */
      public float getComplete() {
        return complete_;
      }
      /**
       * <code>optional float complete = 10;</code>
       *
       * <pre>
       *完成值
       * </pre>
       */
      public Builder setComplete(float value) {
        bitField0_ |= 0x00000200;
        complete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float complete = 10;</code>
       *
       * <pre>
       *完成值
       * </pre>
       */
      public Builder clearComplete() {
        bitField0_ = (bitField0_ & ~0x00000200);
        complete_ = 0F;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <code>optional int32 state = 11;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 state = 11;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>optional int32 state = 11;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000400;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 state = 11;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000400);
        state_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object currencyCode_ = "";
      /**
       * <code>optional string currency_code = 12;</code>
       *
       * <pre>
       *返回的默认币种
       * </pre>
       */
      public boolean hasCurrencyCode() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string currency_code = 12;</code>
       *
       * <pre>
       *返回的默认币种
       * </pre>
       */
      public java.lang.String getCurrencyCode() {
        java.lang.Object ref = currencyCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            currencyCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string currency_code = 12;</code>
       *
       * <pre>
       *返回的默认币种
       * </pre>
       */
      public com.google.protobuf.ByteString
      getCurrencyCodeBytes() {
        java.lang.Object ref = currencyCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          currencyCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string currency_code = 12;</code>
       *
       * <pre>
       *返回的默认币种
       * </pre>
       */
      public Builder setCurrencyCode(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        currencyCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string currency_code = 12;</code>
       *
       * <pre>
       *返回的默认币种
       * </pre>
       */
      public Builder clearCurrencyCode() {
        bitField0_ = (bitField0_ & ~0x00000800);
        currencyCode_ = getDefaultInstance().getCurrencyCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string currency_code = 12;</code>
       *
       * <pre>
       *返回的默认币种
       * </pre>
       */
      public Builder setCurrencyCodeBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        currencyCode_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fksproto.Crowd)
    }

    static {
      defaultInstance = new Crowd(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fksproto.Crowd)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_fksproto_CrowdLadder_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_fksproto_CrowdLadder_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_fksproto_Crowd_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internal_static_fksproto_Crowd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    java.lang.String[] descriptorData = {
            "\n\016cs_crowd.proto\022\010fksproto\032\rcs_head.prot" +
                    "o\032\rcs_base.proto\"D\n\013CrowdLadder\022\014\n\004goal\030" +
                    "\001 \001(\002\022\025\n\rdiscount_type\030\002 \001(\005\022\020\n\010discount" +
                    "\030\003 \001(\002\"\362\001\n\005Crowd\022\020\n\010crowd_id\030\001 \002(\003\022\014\n\004na" +
                    "me\030\002 \001(\t\022\r\n\005title\030\003 \001(\t\022\014\n\004logo\030\004 \001(\t\022\022\n" +
                    "\ncrowd_type\030\005 \001(\005\022\022\n\ncount_type\030\006 \001(\005\022\022\n" +
                    "\nbegin_time\030\007 \001(\005\022\020\n\010end_time\030\010 \001(\005\022&\n\007l" +
                    "adders\030\t \003(\0132\025.fksproto.CrowdLadder\022\020\n\010c" +
                    "omplete\030\n \001(\002\022\r\n\005state\030\013 \001(\005\022\025\n\rcurrency" +
                    "_code\030\014 \001(\t*J\n\016CrowdCountType\022\033\n\027CROWD_C",
            "OUNT_TYPE_NUMBER\020\001\022\033\n\027CROWD_COUNT_TYPE_A" +
                    "MOUNT\020\002*8\n\tCrowdType\022\026\n\022CROWD_TYPE_PRODU" +
                    "CT\020\001\022\023\n\017CROWD_TYPE_ITEM\020\002*\240\001\n\nCrowdState" +
                    "\022\024\n\020CROWD_STATE_NONE\020\000\022\027\n\023CROWD_STATE_PE" +
                    "NDING\020\001\022\030\n\024CROWD_STATE_CROWDING\020\002\022\027\n\023CRO" +
                    "WD_STATE_SUCCESS\020\003\022\026\n\022CROWD_STATE_FAILED" +
                    "\020\004\022\030\n\024CROWD_STATE_CHECKING\020\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                            fksproto.CsHead.getDescriptor(),
                            fksproto.CsBase.getDescriptor(),
                    }, assigner);
    internal_static_fksproto_CrowdLadder_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_fksproto_CrowdLadder_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_fksproto_CrowdLadder_descriptor,
            new java.lang.String[] { "Goal", "DiscountType", "Discount", });
    internal_static_fksproto_Crowd_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_fksproto_Crowd_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
            internal_static_fksproto_Crowd_descriptor,
            new java.lang.String[] { "CrowdId", "Name", "Title", "Logo", "CrowdType", "CountType", "BeginTime", "EndTime", "Ladders", "Complete", "State", "CurrencyCode", });
    fksproto.CsHead.getDescriptor();
    fksproto.CsBase.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}