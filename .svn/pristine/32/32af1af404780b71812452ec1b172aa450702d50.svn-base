package com.fuexpress.kr.ui.fragment.myneed;


import android.support.v4.app.Fragment;
import android.view.View;
import android.widget.RelativeLayout;

import com.fuexpress.kr.MainActivity;
import com.fuexpress.kr.R;
import com.fuexpress.kr.base.BaseFragment;
import com.fuexpress.kr.model.AccountManager;
import com.fuexpress.kr.net.INetEngineListener;
import com.fuexpress.kr.net.NetEngine;
import com.fuexpress.kr.ui.adapter.NeedItemsAdapter;
import com.fuexpress.kr.ui.uiutils.UIUtils;
import com.fuexpress.kr.ui.view.RefreshListView;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import fksproto.CsBase;
import fksproto.CsUser;

/**
 * A simple {@link Fragment} subclass.
 */
public class ToPayFragment extends BaseFragment<MainActivity> implements RefreshListView.OnRefreshListener {


    @BindView(R.id.lv_body)
    RefreshListView lvBody;
    @BindView(R.id.rl_hint)
    RelativeLayout rlHint;
    int index;
    private List<CsUser.Require> mData;
    private NeedItemsAdapter mNeedItemsAdapter;
    private boolean hasMore = true;

    @Override
    protected void initTitleBar() {

    }

    @Override
    public View initView() {
        return View.inflate(getContext(), R.layout.fragment_to_need_pay, null);
    }

    @Override
    public void initData() {
        mData = new ArrayList<>();
        mNeedItemsAdapter = new NeedItemsAdapter(mContext, mData);
        lvBody.setOnRefreshListener(this);
        lvBody.setAdapter(mNeedItemsAdapter);
        index = 1;
        getData(index);
    }


    private void getData(int index) {
        CsBase.BaseUserRequest.Builder baseUserRequest = AccountManager.getInstance().getBaseUserRequest();
        CsBase.BaseUserRequest.Builder builder1 = baseUserRequest.clone().setUin(91054);
        CsUser.GetMyRequireListRequest.Builder builder = CsUser.GetMyRequireListRequest.newBuilder().setUserinfo(builder1).setPageNo(index).setStatus(getState());
        NetEngine.postRequest(builder, new INetEngineListener<CsUser.GetMyRequireListResponse>() {
            @Override
            public void onSuccess(final CsUser.GetMyRequireListResponse response) {
                UIUtils.postTaskSafely(new Runnable() {
                    @Override
                    public void run() {
                        lvBody.stopLoadMore(true);
                        lvBody.stopRefresh();
                        List<CsUser.Require> requireListList = response.getRequireListList();
                        if (requireListList.size() > 0) {
                            mData.addAll(requireListList);
                            mNeedItemsAdapter.notifyDataSetChanged();
                        }
                        String more = response.getMore();
                        if (more.contains("yes")) {
                            hasMore = true;
                        } else {
                            hasMore = false;
                        }
                        lvBody.setHasLoadMore(hasMore);
                    }
                });
            }

            @Override
            public void onFailure(int ret, String errMsg) {
                UIUtils.postTaskSafely(new Runnable() {
                    @Override
                    public void run() {
                        lvBody.stopLoadMore(true);
                        lvBody.stopRefresh();
                    }
                });
            }
        });
    }


    protected String getState() {
        return "Pending";
    }

    @Override
    public void onRefresh(RefreshListView refreshListView) {
        mData.clear();
        index = 1;
        getData(index);
    }

    @Override
    public void onLoadMore(RefreshListView refreshListView) {
        if(hasMore){
            index++;
            getData(index);
        }

    }
}
