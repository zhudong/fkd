package com.fuexpress.kr.ui.adapter;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.content.Context;
import android.support.annotation.NonNull;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;

import com.fuexpress.kr.R;
import com.fuexpress.kr.bean.HelpItemViewBean;
import com.fuexpress.kr.ui.uiutils.AnimationUtils;
import com.fuexpress.kr.ui.view.CustomGridView;
import com.fuexpress.kr.ui.view.InputBoxView;

import java.util.ArrayList;
import java.util.List;

import fksproto.CsParcel;

/**
 * Created by Longer on 2016/10/28.
 * 帮我系列的Adapter
 */
public class AdapterForHelp extends BaseAdapter implements View.OnClickListener {

    public static final String KEY_HELP_ME_SIGNED = "HELP_ME_SIGNED";//帮我收货的type
    public static final String KEY_HELP_ME_GET = "HELP_ME_GET";//帮我取货的type
    public static final String KEY_HELP_ADD = "HELP_ADD";//帮我取货


    private Context mContext;
    private List<ViewHolder> mViewHolderList;
    private boolean mIsClickAni = false;
    private boolean mIsShowingAni = false;
    private HelpAdapterInterface mHelpAdapterInterface;
    private List<CsParcel.ProductDataList> mProductDataLists;
    private String mType = "";


    public AdapterForHelp(Context context) {
        for (int i = 0; i < 3; i++) {
            testqurlList.add(testUrl);
        }
        mContext = context;
    }

    /**
     * 泛型是用来指定好特定Activity
     *
     * @param context              上下文
     * @param helpAdapterInterface 这个Adapter的特定接口,详情请看HelpAdapterInterface
     * @param dataLists            数据列表
     */
    List<String> testqurlList = new ArrayList<>();
    String testUrl = "http://dimage.yissimg.com/storage/emulated/0/Android/data/adyen.com.adyenpaysdk.controllers.NetworkController/cache/201269headIcon1481005394523!140.jpg!small9";

    public AdapterForHelp(@NonNull Context context, @NonNull HelpAdapterInterface helpAdapterInterface, @NonNull List<CsParcel.ProductDataList> dataLists, @NonNull String type) {
        mContext = context;
        mHelpAdapterInterface = helpAdapterInterface;
        mProductDataLists = dataLists;
        mType = type;

    }

    @Override
    public int getCount() {
        //return mProductDataLists == null ? 0 : mProductDataLists.size();
        return 5;
    }

    @Override
    public Object getItem(int position) {
        return mProductDataLists == null ? null : mProductDataLists.get(position);
    }

    @Override
    public long getItemId(int position) {
        return mProductDataLists == null ? 0 : position;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (mViewHolderList == null) {
            mViewHolderList = new ArrayList<>();
        }
        ViewHolder viewHolder;
        if (convertView == null) {
            viewHolder = new ViewHolder();
            convertView = View.inflate(mContext, R.layout.item_for_normal_layout, null);
            viewHolder.iv_in_item_delete = (ImageView) convertView.findViewById(R.id.iv_in_item_delete);
            viewHolder.ll_in_normal_item = (LinearLayout) convertView.findViewById(R.id.ll_in_normal_item);
            viewHolder.ip_01_help_adapter = (InputBoxView) convertView.findViewById(R.id.ip_01_help_adapter);
            viewHolder.ip_02_help_adapter = (InputBoxView) convertView.findViewById(R.id.ip_02_help_adapter);
            viewHolder.ip_03_help_adapter = (InputBoxView) convertView.findViewById(R.id.ip_03_help_adapter);
            viewHolder.ip_04_help_adapter = (InputBoxView) convertView.findViewById(R.id.ip_04_help_adapter);
            viewHolder.ip_05_help_adapter = (InputBoxView) convertView.findViewById(R.id.ip_05_help_adapter);
            viewHolder.gv_help_head = (CustomGridView) convertView.findViewById(R.id.gv_help_head);
            convertView.setTag(viewHolder);
            mViewHolderList.add(viewHolder);
            doDeleteAnimationPlus(viewHolder, 1, mIsClickAni);
        } else {
            viewHolder = (ViewHolder) convertView.getTag();
        }

        viewHolder.gv_help_head.setAdapter(new HelpHeadAdapter(mContext, testqurlList));
        viewHolder.iv_in_item_delete.setOnClickListener(this);
        viewHolder.iv_in_item_delete.setTag(position);
        /*viewHolder.img_append_photo.setOnClickListener(this);
        viewHolder.img_append_photo.setTag(position);*/


        return convertView;
    }


    public void doDeletAnimation() {
        if (mIsShowingAni) return;
        mIsClickAni = !mIsClickAni;
        for (ViewHolder viewHolder : mViewHolderList) {
            doDeleteAnimationPlus(viewHolder, 500, mIsClickAni);
        }
    }

    private void doDeleteAnimationPlus(ViewHolder viewHolder, long time, boolean isOpen) {
        AnimationUtils.doDeletAnimation(HelpItemViewBean.create().setLLView(viewHolder.ll_in_normal_item).setImageView(viewHolder.iv_in_item_delete).setDuration(time).setAnimatiorAdapter(new AnimatorListenerAdapter() {
            @Override
            public void onAnimationStart(Animator animation) {
                mIsShowingAni = true;
            }

            @Override
            public void onAnimationEnd(Animator animation) {
                mIsShowingAni = false;
            }
        }), isOpen);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.iv_in_item_delete:
                mHelpAdapterInterface.deletData((Integer) v.getTag());
                break;
            case R.id.img_append_photo:
                mHelpAdapterInterface.editImage((Integer) v.getTag());
                break;

        }
    }

    class ViewHolder {
        LinearLayout ll_in_normal_item;
        ImageView iv_in_item_delete;
        LinearLayout ll_phote_container;
        CustomGridView gv_help_head;
        ImageView img_append_photo;
        InputBoxView ip_01_help_adapter;
        InputBoxView ip_02_help_adapter;
        InputBoxView ip_03_help_adapter;
        InputBoxView ip_04_help_adapter;
        InputBoxView ip_05_help_adapter;
    }
}
