package com.fuexpress.kr.ui.activity;

import android.content.Context;
import android.content.Intent;
import android.support.v4.util.ArrayMap;
import android.text.TextUtils;
import android.view.MotionEvent;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.fuexpress.kr.R;
import com.fuexpress.kr.base.BaseActivity;
import com.fuexpress.kr.base.BusEvent;
import com.fuexpress.kr.model.AccountManager;
import com.fuexpress.kr.model.AssetFileManager;
import com.fuexpress.kr.model.UserManager;
import com.fuexpress.kr.ui.view.TitleBarView;
import com.fuexpress.kr.utils.LogUtils;
import com.socks.library.KLog;

import cn.pedant.SweetAlert.SweetAlertDialog;
import fksproto.CsUser;

public class UserDetailInfoActivity extends BaseActivity {

    private View mRootView;
    private TitleBarView mTitleBarView;
    private TextView mTextViewRight;
    private ImageView mImageViewLeft;
    private EditText mEd_in_user_info_nick_name;
    private EditText mEd_in_user_info_self_introduction;
    private TextView mTv_in_user_info_member_group, mTv_in_user_info_phone_number,
            mTv_in_user_info_email, mTv_in_user_info_gender, mTv_in_user_info_birthday,
            mTv_in_user_info_country, mTv_in_user_info_location, mTv_in_user_info_personal_homepage;
    private RelativeLayout mRl_in_user_info_email, mRl_in_user_info_birthday, mRl_in_user_info_gender,
            mRl_in_user_info_country, mRl_in_user_info_location;
    private String mCountry;
    private String mProvince;
    private String mCity;
    private RelativeLayout mRl_in_user_info_phone;
    private EditText mEd_in_user_info_personal_homepage;
    private String mLastNikename;
    private String mLastBrithday;
    private String mLastHomePage;
    private String mLastIntro;
    private String mGenderString;
    private String mLastRegionValue;
    private String mPleaseChoose;
    private String mThisRegionCode;


    @Override
    public View setInitView() {
        mRootView = View.inflate(this, R.layout.activity_user_detail_info, null);
        TitleBarView titleBarView = (TitleBarView) mRootView.findViewById(R.id.title_in_user_info);
        titleBarView.getIv_in_title_back().setOnClickListener(this);
        mLastRegionValue = getString(R.string.user_info_drtail_please_choose);
        mPleaseChoose = getString(R.string.user_info_drtail_please_choose);
        return mRootView;
    }


    @Override
    public void initView() {
        initData();
        registerWidget();
    }

    private void initData() {
        UserManager.getInstance().getUserDetailInfo();
    }

    private void registerWidget() {
        mEd_in_user_info_nick_name = (EditText) mRootView.findViewById(R.id.ed_in_user_info_nick_name);
        mEd_in_user_info_self_introduction = (EditText) mRootView.findViewById(R.id.ed_in_user_info_self_introduction);
        mTv_in_user_info_member_group = (TextView) mRootView.findViewById(R.id.tv_in_user_info_member_group);
        mTv_in_user_info_phone_number = (TextView) mRootView.findViewById(R.id.tv_in_user_info_phone_number);
        mTv_in_user_info_email = (TextView) mRootView.findViewById(R.id.tv_in_user_info_email);
        mTv_in_user_info_gender = (TextView) mRootView.findViewById(R.id.tv_in_user_info_gender);
        mTv_in_user_info_birthday = (TextView) mRootView.findViewById(R.id.tv_in_user_info_birthday);
        mTv_in_user_info_country = (TextView) mRootView.findViewById(R.id.tv_in_user_info_country);
        mTv_in_user_info_location = (TextView) mRootView.findViewById(R.id.tv_in_user_info_location);
        mEd_in_user_info_personal_homepage = (EditText) mRootView.findViewById(R.id.ed_in_user_info_personal_homepage);

        mRl_in_user_info_email = (RelativeLayout) mRootView.findViewById(R.id.rl_in_user_info_email);
        mRl_in_user_info_gender = (RelativeLayout) mRootView.findViewById(R.id.rl_in_user_info_gender);
        mRl_in_user_info_birthday = (RelativeLayout) mRootView.findViewById(R.id.rl_in_user_info_birthday);
        mRl_in_user_info_country = (RelativeLayout) mRootView.findViewById(R.id.rl_in_user_info_country);
        mRl_in_user_info_location = (RelativeLayout) mRootView.findViewById(R.id.rl_in_user_info_location);
        mRl_in_user_info_phone = (RelativeLayout) mRootView.findViewById(R.id.rl_in_user_info_phone);
        Button btn_user_info_save = (Button) mRootView.findViewById(R.id.btn_user_info_save);
        btn_user_info_save.setOnClickListener(this);
        mRl_in_user_info_country.setOnClickListener(this);
        mRl_in_user_info_location.setOnClickListener(this);
        mRl_in_user_info_birthday.setOnClickListener(this);
        mRl_in_user_info_gender.setOnClickListener(this);
        mRl_in_user_info_email.setOnClickListener(this);
    }


    @Override
    public void onClick(View v) {
        super.onClick(v);
        switch (v.getId()) {
            case R.id.btn_user_info_save:
                //LogUtils.e("我被点击了");
                checkInfo();
                break;
            case R.id.rl_in_user_info_country:
                Intent intent = new Intent(this, AddressDialogActivity.class);
                intent.putExtra("type", AddressDialogActivity.COUNTRY_TYPE);
                String trim = mTv_in_user_info_country.getText().toString().trim();
                if (trim != null && !TextUtils.isEmpty(trim)) {
                    intent.putExtra("country", trim);
                }
                startActivityForResult(intent, 1);
                break;
            case R.id.rl_in_user_info_location:
                Intent intent02 = new Intent(this, AddressDialogActivity.class);
                intent02.putExtra("type", AddressDialogActivity.PROVINCE_AND_CITY_TYPE);
                if (mCountry != null && !TextUtils.isEmpty(mCountry)) {
                    intent02.putExtra("country", mCountry);
                } else {
                    String trim02 = mTv_in_user_info_country.getText().toString().trim();
                    if (trim02 != null && !TextUtils.isEmpty(trim02)) {
                        intent02.putExtra("country", trim02);
                    }
                }
                String trim1 = mTv_in_user_info_location.getText().toString().trim();
                if (trim1 != null && !TextUtils.isEmpty(trim1)) {
                    intent02.putExtra("haveLocation", trim1);
                }
                String regionCode = "";
                if (mThisRegionCode != null && !TextUtils.isEmpty(mThisRegionCode))
                    regionCode = mThisRegionCode;
                else regionCode = UserManager.getInstance().mRegionCode;
                intent02.putExtra(AddressDialogActivity.KEY_REGION_CODE, regionCode);
                startActivityForResult(intent02, 2);
                break;
            case R.id.rl_in_user_info_birthday:
                //startDDMActivity(TImePickerActivity.class, false);
                String time = mTv_in_user_info_birthday.getText().toString().trim();
                if (!time.isEmpty() && !(mPleaseChoose.equals(time))) {
                    Intent intent03 = new Intent(this, TImePickerActivity.class);
                    String[] split = time.split("\\-");
                    int year = Integer.parseInt(split[0]);
                    int month = Integer.parseInt(split[1]);
                    int day = Integer.parseInt(split[2]);
                    intent03.putExtra("year", year);
                    intent03.putExtra("month", month - 1);
                    intent03.putExtra("day", day);
                    startActivityForResult(intent03, 3);
                } else {
                    //startDDMActivity(TImePickerActivity.class, true);
                    Intent intent03 = new Intent(this, TImePickerActivity.class);
                    startActivityForResult(intent03, 3);
                }
                break;
            case R.id.rl_in_user_info_gender:
                Intent intent04 = new Intent(this, GenderDialogActivity.class);
                startActivityForResult(intent04, 4);
                break;
            case R.id.rl_in_user_info_email:
                Intent intent05 = new Intent(this, ChangeEmailActivity.class);
                startActivityForResult(intent05, 5);
                break;
        }
    }

    private void checkInfo() {
        ArrayMap<Integer, String> paramMap = new ArrayMap<>();
        String newNickName = mEd_in_user_info_nick_name.getText().toString().trim();
        if (TextUtils.isEmpty(newNickName) || newNickName == null) {
            showProgressDiaLog(SweetAlertDialog.WARNING_TYPE, getString(R.string.user_info_drtail_dialog_for_nick_name));
            dissMissProgressDiaLog(1000);
            return;
        } else if (!mLastNikename.equals(newNickName)) {
            paramMap.put(CsUser.UserInfoFieldType.USER_INFO_FIELD_NICKNAME_VALUE, newNickName);
        }
        String newGender = mTv_in_user_info_gender.getText().toString().trim();
        String male = getString(R.string.user_info_drtail_gender_male);
        String female = getString(R.string.user_info_drtail_gender_female);
        if (!mGenderString.equals(newGender)) {
            if (female.equals(newGender)) {
                newGender = "1";
            } else if (male.equals(newGender)) {
                newGender = "2";
            }
            paramMap.put(CsUser.UserInfoFieldType.USER_INFO_FIELD_GENDER_VALUE, newGender);
        }
        String newBrithday = mTv_in_user_info_birthday.getText().toString().trim();
        if (mLastBrithday == null || !mLastBrithday.equals(newBrithday) && !mLastBrithday.equals(mPleaseChoose)) {
            paramMap.put(CsUser.UserInfoFieldType.USER_INFO_FIELD_BIRTHDAY_VALUE, newBrithday);
        }
        String newCountry = mTv_in_user_info_country.getText().toString().trim();
        String newLocation = mTv_in_user_info_location.getText().toString().trim();
        if (newCountry == null || mPleaseChoose.equals(newCountry)) {
            showProgressDiaLog(SweetAlertDialog.WARNING_TYPE, getString(R.string.user_info_drtail_dialog_address));
            dissMissProgressDiaLog(1000);
            return;
        } else if (newLocation == null || mPleaseChoose.equals(newLocation)) {
            showProgressDiaLog(SweetAlertDialog.WARNING_TYPE, getString(R.string.user_info_drtail_dialog_address_02));
            dissMissProgressDiaLog(1000);
            return;
        } else {
            if (!mLastRegionValue.equals(newLocation) && mThisRegionCode != null && !TextUtils.isEmpty(mThisRegionCode)) {
                /*String[] split = newLocation.split("\\ ");
                String s = split[1];
                String stringText = AssetFileManager.getInstance().getStringTextPro(newLocation, newCountry);*/
                //LogUtils.e("这是StringText的返回值:" + stringText);
                paramMap.put(CsUser.UserInfoFieldType.USER_INFO_FIELD_REGION_VALUE, mThisRegionCode);
                paramMap.put(CsUser.UserInfoFieldType.USER_INFO_FIELD_REGION_ID_VALUE, mThisRegionCode);
            }
        }

        String newUserHomePage = mEd_in_user_info_personal_homepage.getText().toString().trim();
        if (!mLastHomePage.equals(newUserHomePage)) {
            paramMap.put(CsUser.UserInfoFieldType.USER_INFO_FIELD_HOME_PAGE_VALUE, newUserHomePage);
        }

        String newSelfIntro = mEd_in_user_info_self_introduction.getText().toString().trim();
        if (mLastIntro != null && !mLastIntro.equals(newSelfIntro)) {
            paramMap.put(CsUser.UserInfoFieldType.USER_INFO_FIELD_INTRO_VALUE, newSelfIntro);
        }

        if (paramMap.size() >= 1) {
            UserManager.getInstance().setUserInfo(paramMap);
        } else {
            showProgressDiaLog(SweetAlertDialog.WARNING_TYPE, getString(R.string.user_info_drtail_if_info_not_change_dialog));
            dissMissProgressDiaLog(1000);
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        //super.onActivityResult(requestCode, resultCode, data);
        if (1 == requestCode && data != null) {
            mCountry = data.getStringExtra("country");
            String trim = mTv_in_user_info_country.getText().toString().trim();

            if (!mCountry.equals(trim)) {
                mTv_in_user_info_country.setText(mCountry);
                mTv_in_user_info_location.setText(mPleaseChoose);
            }
            mThisRegionCode = data.getStringExtra(AddressDialogActivity.KEY_REGION_CODE);
        } else if (2 == requestCode && data != null) {
            String location = data.getStringExtra("location");
            mThisRegionCode = data.getStringExtra(AddressDialogActivity.KEY_REGION_CODE);
            mTv_in_user_info_location.setText(location);
        } else if (3 == requestCode && data != null) {
            String time = data.getStringExtra("time");
            mTv_in_user_info_birthday.setText(time);
            //mLastBrithday = time;
        } else if (4 == requestCode && data != null) {
            String gender = data.getStringExtra("gender");
            LogUtils.e(gender);
            mTv_in_user_info_gender.setText(data.getStringExtra("gender"));
        }
    }

    @Override
    public void onEventMainThread(BusEvent event) {
        super.onEventMainThread(event);
        switch (event.getType()) {
            case BusEvent.GET_USER_DETAIL_INFO_FILED_COMPLETE:
                boolean isSuccess = event.getBooleanParam();
                if (isSuccess) {
                    setwidgetAndData();
                } else {
                    showProgressDiaLog(SweetAlertDialog.ERROR_TYPE, getString(R.string.user_info_drtail_dialog_get_user_info_fail));
                    dissMissProgressDiaLog(1000);
                }
                break;
            case BusEvent.SET_USER_INFO_FILED_COMPLETE:
                boolean isSetSuccess = event.getBooleanParam();
                if (isSetSuccess) {
                    showProgressDiaLog(SweetAlertDialog.SUCCESS_TYPE, getString(R.string.user_info_drtail_dialog_change_user_info_success));
                    KLog.i(" currency_code " + AccountManager.getInstance().getCurrencyCode());
                    AccountManager.getInstance().getUserinfo();
                } else {
                    showProgressDiaLog(SweetAlertDialog.ERROR_TYPE, getString(R.string.user_info_drtail_dialog_change_user_info_fail));
                }
                dissMissProgressDiaLog(1000);
                break;
        }
    }

    private void setwidgetAndData() {
        mLastNikename = AccountManager.getInstance().nikename;
        mEd_in_user_info_nick_name.setText(mLastNikename);
        int memberGroup = AccountManager.getInstance().mMemberGroup;
        if (3 == memberGroup) {
            mTv_in_user_info_member_group.setText(getString(R.string.user_info_drtail_member_super));
        } else if (2 == memberGroup) {
            mTv_in_user_info_member_group.setText(getString(R.string.user_info_drtail_member_vip) + getString(R.string.user_info_drtail_member_end_01) + UserManager.getInstance().mMemberEnd + getString(R.string.user_info_drtail_member_end_02));
        } else {
            mTv_in_user_info_member_group.setText(getString(R.string.user_info_drtail_member_normal));
        }
        if (UserManager.getInstance().mMobile != null && !TextUtils.isEmpty(UserManager.getInstance().mMobile)) {
            mTv_in_user_info_phone_number.setText(UserManager.getInstance().mMobile);
        } else {
            mRl_in_user_info_phone.setVisibility(View.GONE);
        }
        if (UserManager.getInstance().mEmail != null && !TextUtils.isEmpty(UserManager.getInstance().mEmail)) {
            mTv_in_user_info_email.setText(UserManager.getInstance().mEmail);
        } else {
            mRl_in_user_info_email.setVisibility(View.GONE);
        }
        int gender = AccountManager.getInstance().mGender;

        mGenderString = "";
        if (gender != 0) {
            if (1 == gender) {//1为女2为男
                mTv_in_user_info_gender.setText(getString(R.string.user_info_drtail_gender_female));
                mGenderString = getString(R.string.user_info_drtail_gender_female);
            } else {
                mTv_in_user_info_gender.setText(getString(R.string.user_info_drtail_gender_male));
                mGenderString = getString(R.string.user_info_drtail_gender_male);
            }
        } else {
            mTv_in_user_info_gender.setText(mPleaseChoose);
        }

        mLastBrithday = UserManager.getInstance().mBrithday;
        if (mLastBrithday.isEmpty()) {
            mTv_in_user_info_birthday.setText(mPleaseChoose);
        } else {
            mTv_in_user_info_birthday.setText(mLastBrithday);
        }
        if (UserManager.getInstance().mHomePage != null) {
            mLastHomePage = UserManager.getInstance().mHomePage;
            mEd_in_user_info_personal_homepage.setText(UserManager.getInstance().mHomePage);
        }
        if (AccountManager.getInstance().mIntro != null) {
            mLastIntro = AccountManager.getInstance().mIntro;
            mEd_in_user_info_self_introduction.setText(AccountManager.getInstance().mIntro);
        }

        String region = UserManager.getInstance().mRegionCode;
        String locationString = AssetFileManager.getInstance().readFilePlus(region, AssetFileManager.EDIT_ADDRESS_TYPE);
        if (TextUtils.isEmpty(locationString)) {
            mLastRegionValue = mPleaseChoose;
        } else {
            mLastRegionValue = locationString;
        }
        //mLastRegionValue = AssetFileManager.getInstance().readFilePlus(region, AssetFileManager.EDIT_ADDRESS_TYPE);
        String country = AssetFileManager.getInstance().readFilePlus(region, AssetFileManager.COUNTRY_TYPE);
        if (TextUtils.isEmpty(country)) {
            country = mPleaseChoose;
        }
        mTv_in_user_info_country.setText(country);
        mTv_in_user_info_location.setText(mLastRegionValue);
    }


    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        if (ev.getAction() == MotionEvent.ACTION_DOWN) {
            View v = getCurrentFocus();
            if (isShouldHideInput(v, ev)) {

                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                if (imm != null) {
                    imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
                }
            }
            return super.dispatchTouchEvent(ev);
        }
        // 必不可少，否则所有的组件都不会有TouchEvent了
        if (getWindow().superDispatchTouchEvent(ev)) {
            return true;
        }
        return onTouchEvent(ev);
    }

    public boolean isShouldHideInput(View v, MotionEvent event) {
        if (v != null && (v instanceof EditText)) {
            int[] leftTop = {0, 0};
            //获取输入框当前的location位置
            v.getLocationInWindow(leftTop);
            int left = leftTop[0];
            int top = leftTop[1];
            int bottom = top + v.getHeight();
            int right = left + v.getWidth();
            if (event.getX() > left && event.getX() < right
                    && event.getY() > top && event.getY() < bottom) {
                // 点击的是输入框区域，保留点击EditText的事件
                return false;
            } else {
                return true;
            }
        }
        return false;
    }

}
