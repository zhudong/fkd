package com.fuexpress.kr.ui.activity.login_register;

import android.content.Intent;
import android.graphics.Typeface;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.text.method.PasswordTransformationMethod;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.facebook.AccessToken;
import com.facebook.AccessTokenTracker;
import com.facebook.CallbackManager;
import com.facebook.FacebookCallback;
import com.facebook.FacebookException;
import com.facebook.FacebookSdk;
import com.facebook.GraphRequest;
import com.facebook.GraphResponse;
import com.facebook.Profile;
import com.facebook.ProfileTracker;
import com.facebook.login.LoginManager;
import com.facebook.login.LoginResult;
import com.fuexpress.kr.MainActivity;
import com.fuexpress.kr.R;
import com.fuexpress.kr.base.BaseActivity;
import com.fuexpress.kr.base.BusEvent;
import com.fuexpress.kr.conf.Constants;
import com.fuexpress.kr.model.AccountManager;
import com.fuexpress.kr.net.RequestNetListenerWithMsg;
import com.fuexpress.kr.ui.activity.ChooseCountryActivity;
import com.fuexpress.kr.ui.activity.ChooseLanguageActivity;
import com.fuexpress.kr.utils.CountryNumberUtils;
import com.fuexpress.kr.utils.SPUtils;
import com.google.protobuf.GeneratedMessage;
import com.socks.library.KLog;
import com.tencent.connect.UserInfo;
import com.tencent.connect.auth.QQAuth;
import com.tencent.mm.sdk.modelbase.BaseReq;
import com.tencent.mm.sdk.modelbase.BaseResp;
import com.tencent.mm.sdk.modelmsg.SendAuth;
import com.tencent.mm.sdk.openapi.IWXAPI;
import com.tencent.mm.sdk.openapi.IWXAPIEventHandler;
import com.tencent.mm.sdk.openapi.WXAPIFactory;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.Arrays;
import java.util.Set;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;
import de.greenrobot.event.EventBus;
import fksproto.CsLogin;

/**
 * Created by kevin.xie on 2016/10/31.
 */

public class LoginByPhoneActivity extends BaseActivity implements IWXAPIEventHandler {
    @BindView(R.id.title_tv_left)
    TextView mTitleTvLeft;
    @BindView(R.id.title_tv_center)
    TextView mTitleTvCenter;
    @BindView(R.id.title_tv_right)
    TextView mTitleTvRight;
    @BindView(R.id.tv_for_login_in_rl_01)
    TextView mTvForLoginInRl01;
    @BindView(R.id.tv_for_login_location)
    TextView mTvForLoginLocation;
    @BindView(R.id.rl_for_login_choose_location)
    RelativeLayout mRlForLoginChooseLocation;
    @BindView(R.id.tv_for_login_in_rl_02)
    TextView mTvForLoginInRl02;
    @BindView(R.id.ed_for_login_phone_number)
    EditText mEdForLoginPhoneNumber;
    @BindView(R.id.tv_for_login_in_rl_03)
    TextView mTvForLoginInRl03;
    @BindView(R.id.ed_for_login_pwd)
    EditText mEdForLoginPwd;
    @BindView(R.id.logoutButton)
    Button mLogoutButton;
    @BindView(R.id.tv_for_login_forgetpwd)
    TextView mTvForLoginForgetpwd;
    @BindView(R.id.tv_for_login_qq)
    TextView mTvForLoginQq;
    @BindView(R.id.tv_for_login_wx)
    TextView mTvForLoginWx;
    @BindView(R.id.tv_for_facebook_login)
    TextView mTvForFacebookLogin;
    @BindView(R.id.showAnotherLoginMethod)
    LinearLayout mShowAnotherLoginMethod;
    /******************************************
     * 微信登录相关
     ************************/
    public static boolean WX_LOGIN = false;
    @BindView(R.id.tv_for_login_language)
    TextView mTvForLoginLanguage;
    private IWXAPI api;

    /*********************************************
     * facebook
     ***********************/
    private AccessTokenTracker accessTokenTracker;
    private AccessToken accessToken;
    private CallbackManager callbackManager;
    private ProfileTracker profileTracker;

    /*********************************************
     * QQ
     ****************************/
    private IUiListener iUiListener;
    private UserInfo userInfo;
    private Tencent mTencent;
    private QQAuth mQQAuth;
    private String QQ_openid = "";
    private String QQ_access_token = "";
    private long QQ_expires_in = 0;
    private long QQ_endTime = 0;

    @Override
    public View setInitView() {
        View view = LayoutInflater.from(this).inflate(R.layout.activity_login_phone, null);
        return view;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // TODO: add setContentView(...) invocation
        ButterKnife.bind(this);
        mTitleTvCenter.setText(getString(R.string.phone_login));
        mTitleTvLeft.setVisibility(View.VISIBLE);
        mTitleTvLeft.setText(getString(R.string.cancel));
        mTitleTvRight.setVisibility(View.VISIBLE);
        mTitleTvRight.setText(getString(R.string.register));
        mEdForLoginPwd.setTypeface(Typeface.DEFAULT);
        mEdForLoginPwd.setTransformationMethod(new PasswordTransformationMethod());
        mEdForLoginPhoneNumber.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                String temp = mEdForLoginPhoneNumber.getText().toString();
                if (!TextUtils.isEmpty(temp) && temp.startsWith("0")) {
                    temp = temp.substring(1);
                    mEdForLoginPhoneNumber.setText(temp);
                }
            }
        });
    }

    @Override
    protected void onResume() {
        super.onResume();
        CountryNumberUtils.setResetCountry(this);
        mTvForLoginLocation.setText(AccountManager.getInstance().userCountry);
        mTvForLoginInRl02.setText("+" + AccountManager.getInstance().userNumber);
    }

    @OnClick({R.id.title_tv_left, R.id.title_tv_right, R.id.rl_for_login_choose_location, R.id.logoutButton,
            R.id.tv_for_login_forgetpwd, R.id.tv_for_login_qq, R.id.tv_for_login_wx, R.id.tv_for_facebook_login,
            R.id.tv_for_login_language})
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.title_tv_left:
                finish();
                break;
            case R.id.title_tv_right:
                toActivity(RegisterByPhoneActivity.class);
                break;
            case R.id.rl_for_login_choose_location:
                toActivity(ChooseCountryActivity.class);
                break;
            case R.id.logoutButton:
                String phone = mEdForLoginPhoneNumber.getText().toString();
                String password = mEdForLoginPwd.getText().toString();
                int countryNumber = Integer.valueOf(AccountManager.getInstance().userNumber);
                if (TextUtils.isEmpty(phone) || !CountryNumberUtils.isNumberCurrect(countryNumber, phone)) {
                    mViewUtils.toast(getString(R.string.String_phone_error));
                    return;
                }
                if (!TextUtils.isEmpty(phone) && !TextUtils.isEmpty(password)) {
                    //    KLog.i(TAG, "phone = " +  phone_number + " pwd = " + phone_password);
                    showLoading();
                    AccountManager.getInstance().login(CsLogin.AccountType.ACCOUNT_TYPE_PHONE, phone, password, null, this);
                } else {
                    mViewUtils.toast(getString(R.string.login_error));
                }

                break;
            case R.id.tv_for_login_forgetpwd:
                toActivity(FindPasswordActivity.class);
                break;
            case R.id.tv_for_login_qq:
                //   toActivity(ThirdPlatformLoginActivity.class);
                loginByQQ();
                break;
            case R.id.tv_for_login_wx:
                loginByWX();
                break;
            case R.id.tv_for_facebook_login:
                loginByFaceBook();
                break;
            case R.id.tv_for_login_language:
                toActivity(ChooseLanguageActivity.class);
                break;
        }
    }

    private void loginByQQ() {
        KLog.i("account", "qq)");
        iUiListener = new IUiListener() {
            @Override
            public void onComplete(Object arg0) {
                KLog.i("arg= " + arg0.toString());
                JSONObject jsonObject = (JSONObject) arg0;
                KLog.i("success");
                try {
                    //保存QQ相关信息
                    QQ_access_token = jsonObject.getString("access_token");
                    SPUtils.put(LoginByPhoneActivity.this, Constants.QQ.QQ_ACCESS_TOKEN, QQ_access_token);
                    QQ_openid = jsonObject.getString("openid");
                    SPUtils.put(LoginByPhoneActivity.this, Constants.QQ.QQ_OPENDID, QQ_openid);
                    QQ_expires_in = jsonObject.getLong("expires_in");
                    SPUtils.put(LoginByPhoneActivity.this, Constants.QQ.QQ_EXPIRES_IN, QQ_expires_in);
                    SPUtils.put(LoginByPhoneActivity.this, Constants.QQ.QQ_END_TIME, System.currentTimeMillis() + QQ_expires_in * 1000);
                    //保存第三方登录信息_QQ
                    // saveThirdLoginInfo(AccountManager.THIRD_PLATFROM_QQ,QQ_access_token,QQ_openid);
                    getQQUserInfo();
                    AccountManager.getInstance().loginByThirdPlatform(AccountManager.THIRD_PLATFROM_QQ, QQ_access_token, QQ_openid, new RequestNetListenerWithMsg() {
                        @Override
                        public void onSuccess(GeneratedMessage response) {
                            toActivity(MainActivity.class);
                        }

                        @Override
                        public void onFailure(int ret, String msg) {
                            toActivity(ThirdPlatformLoginActivity.class);
                            mViewUtils.toast(msg);
                        }
                    });
                    //   showInfo(AccountManager.THIRD_PLATFROM_QQ);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onError(UiError arg0) {
                // TODO Auto-generated method stub
                KLog.i("uiError" + arg0.toString());
            }

            @Override
            public void onCancel() {
                // TODO Auto-generated method stub
                KLog.i("uiCancel");
            }
        };
        mTencent = Tencent.createInstance(Constants.QQ.QQ_APPID, this.getApplicationContext());
        mTencent.login(LoginByPhoneActivity.this, "all", iUiListener);
    }

    private void loginByWX() {
        KLog.i("微信登录");
        api = WXAPIFactory.createWXAPI(this, Constants.WeiXin.WX_APPID_SHARE, true);
        api.registerApp(Constants.WeiXin.WX_APPID_SHARE);
        WX_LOGIN = true;
        final SendAuth.Req req = new SendAuth.Req();
        req.scope = "snsapi_userinfo";
        req.state = "wechat_sdk_demo_test";
        api.sendReq(req);
    }

    private void loginByFaceBook() {
        FacebookSdk.sdkInitialize(getApplicationContext());
        callbackManager = CallbackManager.Factory.create();
        accessTokenTracker = new AccessTokenTracker() {
            @Override
            protected void onCurrentAccessTokenChanged(
                    AccessToken oldAccessToken,
                    AccessToken currentAccessToken) {
            }
        };
        profileTracker = new ProfileTracker() {
            @Override
            protected void onCurrentProfileChanged(
                    Profile oldProfile,
                    Profile currentProfile) {
                // App code
            }
        };
        // If the access token is available already assign it.
        accessToken = AccessToken.getCurrentAccessToken();
        LoginManager.getInstance().registerCallback(callbackManager, new FacebookCallback<LoginResult>() {
            @Override
            public void onSuccess(LoginResult loginResult) {
                KLog.i("facebook", "Success");
                KLog.i("userId =" + loginResult.getAccessToken().getUserId());
                KLog.i("token =" + loginResult.getAccessToken().getToken());
                KLog.i("permission = " + loginResult.getAccessToken().getPermissions().toString());
                Set<String> set = loginResult.getAccessToken().getPermissions();
                for (String str : set) {
                    KLog.i("permission = " + str);
                }
                AccountManager.getInstance().loginByThirdPlatform(AccountManager.THIRD_PLATFROM_FB, loginResult.getAccessToken().getToken()
                        , loginResult.getAccessToken().getUserId(), new RequestNetListenerWithMsg() {
                            @Override
                            public void onSuccess(GeneratedMessage response) {
                                toActivity(MainActivity.class);
                            }

                            @Override
                            public void onFailure(int ret, String msg) {
                                toActivity(ThirdPlatformLoginActivity.class);
                                mViewUtils.toast(msg);
                            }
                        });

                getFaceBookLoginInfo(loginResult.getAccessToken());

            }

            @Override
            public void onCancel() {
                KLog.i("facebook", "Cancel");
            }

            @Override
            public void onError(FacebookException error) {
                KLog.i("facebook", "Error " + error.toString());

            }
        });
        LoginManager.getInstance().logInWithReadPermissions(LoginByPhoneActivity.this, Arrays.asList("public_profile"));
    }

    /**
     * 微信登录重新的事件处理
     */
    @Override
    public void onReq(BaseReq baseReq) {
        KLog.i(baseReq.toString());
    }

    @Override
    public void onResp(BaseResp baseResp) {
        KLog.i(baseResp.toString());
    }

    /**
     * Facebook登录重新的事件处理
     */
    public void getFaceBookLoginInfo(AccessToken accessToken) {
        GraphRequest request = GraphRequest.newMeRequest(accessToken, new GraphRequest.GraphJSONObjectCallback() {
            @Override
            public void onCompleted(JSONObject object, GraphResponse response) {
                if (object != null) {
                    String id = object.optString("id");   //比如:1565455221565
                    String name = object.optString("name");  //比如：Zhang San
                    AccountManager.getInstance().thridNickname = name;
                    String gender = object.optString("gender");  //性别：比如 male （男）  female （女）
                    String emali = object.optString("email");  //邮箱：比如：56236545@qq.com
                    //获取用户头像
                    JSONObject object_pic = object.optJSONObject("picture");
                    JSONObject object_data = object_pic.optJSONObject("data");
                    String photo = object_data.optString("url");
                    AccountManager.getInstance().thridUserIcon = photo;
                    KLog.i("facebook " + name);
                    KLog.i("facebook " + photo);
                    //    LoginByPhoneActivity.this.toActivity(ThirdPlatformLoginActivity.class);
                    EventBus.getDefault().post(new BusEvent(BusEvent.GET_THIRD_ACCOUNT_INFO, null));
                    //获取地域信息
                   /* String locale = object.optString("locale");   //zh_CN 代表中文简体
                    Toast.makeText( LoginByPhoneActivity.this , "" + object.toString() , Toast.LENGTH_SHORT).show();*/
                    KLog.i("userId = " + object.toString());
                }
            }
        });
        Bundle parameters = new Bundle();
        parameters.putString("fields", "id,name,link,gender,birthday,email,picture,locale,updated_time,timezone,age_range,first_name,last_name");
        request.setParameters(parameters);
        request.executeAsync();
    }

    private void getQQUserInfo() {
        userInfo = new UserInfo(this, mTencent.getQQToken());
        IUiListener listener = new IUiListener() {
            @Override
            public void onError(UiError e) {
                // TODO Auto-generated method stub
            }

            @Override
            public void onComplete(Object response) {
                KLog.i("object " + response.toString());
                JSONObject json = (JSONObject) response;
                // 昵称
                String nickname = null;
                String userIcon = "";
                try {
                    nickname = json.getString("nickname");
                    AccountManager.getInstance().thridNickname = nickname;
                    userIcon = json.getString("figureurl_qq_2");
                    AccountManager.getInstance().thridUserIcon = userIcon;
                    KLog.i("nickname = " + nickname);
                    KLog.i("userIcon = " + userIcon);

                    EventBus.getDefault().post(new BusEvent(BusEvent.GET_THIRD_ACCOUNT_INFO, null));
                } catch (JSONException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }

            }

            @Override
            public void onCancel() {
                // TODO Auto-generated method stub

            }
        };
        userInfo.getUserInfo(listener);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (callbackManager != null) {
            callbackManager.onActivityResult(requestCode, resultCode, data);
        }
    }

    @Override
    public void onEventMainThread(BusEvent event) {
        super.onEventMainThread(event);
        switch (event.getType()) {
            case BusEvent.LOGIN_SUCCESS:
                closeLoading();
                mViewUtils.toast(getString(R.string.login_success));
                this.finish();
                break;
            case BusEvent.LOGIN_FAILURE:
                closeLoading();
                KLog.i("errMsg = " + event.getStrParam());
                mViewUtils.toast(event.getStrParam());
                break;

        }
    }
}
