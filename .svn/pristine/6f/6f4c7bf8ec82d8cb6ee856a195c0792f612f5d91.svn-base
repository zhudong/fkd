// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_const.proto

package fksproto;

public final class CsConst {
    private CsConst() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }
    /**
     * Protobuf enum {@code fksproto.FksCSResultld}
     */
    public enum FksCSResultld
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>RESULT_ID_SUCCESS = 0;</code>
         *
         * <pre>
         *成功
         * </pre>
         */
        RESULT_ID_SUCCESS(0, 0),
        /**
         * <code>RESULT_ID_SYSTEM_ERROR = -1;</code>
         *
         * <pre>
         *服务器内部错误
         * </pre>
         */
        RESULT_ID_SYSTEM_ERROR(1, -1),
        /**
         * <code>RESULT_ID_INVALID_PARAM = -2;</code>
         *
         * <pre>
         *无效参数
         * </pre>
         */
        RESULT_ID_INVALID_PARAM(2, -2),
        /**
         * <code>RESULT_ID_PROTOCOL_ERROR = -3;</code>
         *
         * <pre>
         *协议格式错误
         * </pre>
         */
        RESULT_ID_PROTOCOL_ERROR(3, -3),
        /**
         * <code>RESULT_ID_PB_ENCODE_FAIL = -4;</code>
         *
         * <pre>
         *协议编码错误
         * </pre>
         */
        RESULT_ID_PB_ENCODE_FAIL(4, -4),
        /**
         * <code>RESULT_ID_PB_DECODE_FAIL = -5;</code>
         *
         * <pre>
         *协议解码错误
         * </pre>
         */
        RESULT_ID_PB_DECODE_FAIL(5, -5),
        /**
         * <code>RESULT_ID_TICKET_INVALID = -6;</code>
         *
         * <pre>
         *协议票据无效
         * </pre>
         */
        RESULT_ID_TICKET_INVALID(6, -6),
        /**
         * <code>RESULT_ID_ENCRYPT_FAIL = -7;</code>
         *
         * <pre>
         *协议加密失败
         * </pre>
         */
        RESULT_ID_ENCRYPT_FAIL(7, -7),
        /**
         * <code>RESULT_ID_DECRYPT_FAIL = -8;</code>
         *
         * <pre>
         *协议解密失败
         * </pre>
         */
        RESULT_ID_DECRYPT_FAIL(8, -8),
        /**
         * <code>RESULT_ID_COMPRESS_FAIL = -9;</code>
         *
         * <pre>
         *协议压缩失败
         * </pre>
         */
        RESULT_ID_COMPRESS_FAIL(9, -9),
        /**
         * <code>RESULT_ID_UNCOMPRESS_FAIL = -10;</code>
         *
         * <pre>
         *协议解压失败
         * </pre>
         */
        RESULT_ID_UNCOMPRESS_FAIL(10, -10),
        /**
         * <code>RESULT_ID_VERSION_SAME = -11;</code>
         *
         * <pre>
         *版本号相同
         * </pre>
         */
        RESULT_ID_VERSION_SAME(11, -11),
        /**
         * <code>RESULT_ID_RPC_TIMEOUT = -12;</code>
         *
         * <pre>
         *调用超时
         * </pre>
         */
        RESULT_ID_RPC_TIMEOUT(12, -12),
        /**
         * <code>RESULT_ID_ACCOUNT_EXIST = -21;</code>
         *
         * <pre>
         *账号: 账号存在
         * </pre>
         */
        RESULT_ID_ACCOUNT_EXIST(13, -21),
        /**
         * <code>RESULT_ID_ACCOUNT_NOT_EXIST = -22;</code>
         *
         * <pre>
         *账号: 账号不存在
         * </pre>
         */
        RESULT_ID_ACCOUNT_NOT_EXIST(14, -22),
        /**
         * <code>RESULT_ID_ACCOUNT_PWD_ERROR = -23;</code>
         *
         * <pre>
         *账号: 密码错误
         * </pre>
         */
        RESULT_ID_ACCOUNT_PWD_ERROR(15, -23),
        /**
         * <code>RESULT_ID_ACCOUNT_BEEN_BIND = -24;</code>
         *
         * <pre>
         *账号: 已绑定(第三方账号已与壹时尚账号绑定)
         * </pre>
         */
        RESULT_ID_ACCOUNT_BEEN_BIND(16, -24),
        /**
         * <code>RESULT_ID_ACCOUNT_NOT_BIND = -25;</code>
         *
         * <pre>
         *账号: 未绑定(第三方账号未与壹时尚账号绑定)
         * </pre>
         */
        RESULT_ID_ACCOUNT_NOT_BIND(17, -25),
        /**
         * <code>RESULT_ID_ACCOUNT_OAUTH_ERROR = -26;</code>
         *
         * <pre>
         *账号: 第三方授权非法
         * </pre>
         */
        RESULT_ID_ACCOUNT_OAUTH_ERROR(18, -26),
        /**
         * <code>RESULT_ID_ACCOUNT_NICKNAME_EXIST = -27;</code>
         *
         * <pre>
         *账号: 昵称已存在
         * </pre>
         */
        RESULT_ID_ACCOUNT_NICKNAME_EXIST(19, -27),
        /**
         * <code>RESULT_ID_ACCOUNT_VERIFY_CODE_ERROR = -28;</code>
         *
         * <pre>
         *账号: 验证码错误
         * </pre>
         */
        RESULT_ID_ACCOUNT_VERIFY_CODE_ERROR(20, -28),
        /**
         * <code>RESULT_ID_ACCOUNT_VERIFY_CODE_LIMIT = -29;</code>
         *
         * <pre>
         *账号: 验证码频率限制
         * </pre>
         */
        RESULT_ID_ACCOUNT_VERIFY_CODE_LIMIT(21, -29),
        /**
         * <code>RESULT_ID_MERCHANT_BEEN_FOLLOW = -31;</code>
         *
         * <pre>
         *商户: 已关注
         * </pre>
         */
        RESULT_ID_MERCHANT_BEEN_FOLLOW(22, -31),
        /**
         * <code>RESULT_ID_MERCHANT_NOT_FOLLOW = -32;</code>
         *
         * <pre>
         *商户: 未关注
         * </pre>
         */
        RESULT_ID_MERCHANT_NOT_FOLLOW(23, -32),
        /**
         * <code>RESULT_ID_MERCHANT_NOT_EXIST = -33;</code>
         *
         * <pre>
         *商户: 不存在
         * </pre>
         */
        RESULT_ID_MERCHANT_NOT_EXIST(24, -33),
        /**
         * <code>RESULT_ID_COUPON_USED = -41;</code>
         *
         * <pre>
         *优惠券: 已使用
         * </pre>
         */
        RESULT_ID_COUPON_USED(25, -41),
        /**
         * <code>RESULT_ID_COUPON_INVALID = -42;</code>
         *
         * <pre>
         *优惠券: 无效
         * </pre>
         */
        RESULT_ID_COUPON_INVALID(26, -42),
        /**
         * <code>RESULT_ID_CUSTOMER_ADDRESS_NOT_EXIST = -51;</code>
         *
         * <pre>
         *用户地址不存在
         * </pre>
         */
        RESULT_ID_CUSTOMER_ADDRESS_NOT_EXIST(27, -51),
        /**
         * <code>RESULT_ID_GIFT_CARD_NOT_EXIST = -61;</code>
         *
         * <pre>
         *充值卡不存在
         * </pre>
         */
        RESULT_ID_GIFT_CARD_NOT_EXIST(28, -61),
        /**
         * <code>RESULT_ID_GIFT_CARD_NOT_VALID = -62;</code>
         *
         * <pre>
         *充值卡无效
         * </pre>
         */
        RESULT_ID_GIFT_CARD_NOT_VALID(29, -62),
        /**
         * <code>RESULT_ID_PARCEL_NOT_EXIST = -71;</code>
         *
         * <pre>
         *包裹不存在
         * </pre>
         */
        RESULT_ID_PARCEL_NOT_EXIST(30, -71),
        /**
         * <code>RESULT_ID_CARTITEM_NOSTOCK_OR_DUE = -72;</code>
         *
         * <pre>
         *产品库存不够或者产品过期
         * </pre>
         */
        RESULT_ID_CARTITEM_NOSTOCK_OR_DUE(31, -72),
        ;

        /**
         * <code>RESULT_ID_SUCCESS = 0;</code>
         *
         * <pre>
         *成功
         * </pre>
         */
        public static final int RESULT_ID_SUCCESS_VALUE = 0;
        /**
         * <code>RESULT_ID_SYSTEM_ERROR = -1;</code>
         *
         * <pre>
         *服务器内部错误
         * </pre>
         */
        public static final int RESULT_ID_SYSTEM_ERROR_VALUE = -1;
        /**
         * <code>RESULT_ID_INVALID_PARAM = -2;</code>
         *
         * <pre>
         *无效参数
         * </pre>
         */
        public static final int RESULT_ID_INVALID_PARAM_VALUE = -2;
        /**
         * <code>RESULT_ID_PROTOCOL_ERROR = -3;</code>
         *
         * <pre>
         *协议格式错误
         * </pre>
         */
        public static final int RESULT_ID_PROTOCOL_ERROR_VALUE = -3;
        /**
         * <code>RESULT_ID_PB_ENCODE_FAIL = -4;</code>
         *
         * <pre>
         *协议编码错误
         * </pre>
         */
        public static final int RESULT_ID_PB_ENCODE_FAIL_VALUE = -4;
        /**
         * <code>RESULT_ID_PB_DECODE_FAIL = -5;</code>
         *
         * <pre>
         *协议解码错误
         * </pre>
         */
        public static final int RESULT_ID_PB_DECODE_FAIL_VALUE = -5;
        /**
         * <code>RESULT_ID_TICKET_INVALID = -6;</code>
         *
         * <pre>
         *协议票据无效
         * </pre>
         */
        public static final int RESULT_ID_TICKET_INVALID_VALUE = -6;
        /**
         * <code>RESULT_ID_ENCRYPT_FAIL = -7;</code>
         *
         * <pre>
         *协议加密失败
         * </pre>
         */
        public static final int RESULT_ID_ENCRYPT_FAIL_VALUE = -7;
        /**
         * <code>RESULT_ID_DECRYPT_FAIL = -8;</code>
         *
         * <pre>
         *协议解密失败
         * </pre>
         */
        public static final int RESULT_ID_DECRYPT_FAIL_VALUE = -8;
        /**
         * <code>RESULT_ID_COMPRESS_FAIL = -9;</code>
         *
         * <pre>
         *协议压缩失败
         * </pre>
         */
        public static final int RESULT_ID_COMPRESS_FAIL_VALUE = -9;
        /**
         * <code>RESULT_ID_UNCOMPRESS_FAIL = -10;</code>
         *
         * <pre>
         *协议解压失败
         * </pre>
         */
        public static final int RESULT_ID_UNCOMPRESS_FAIL_VALUE = -10;
        /**
         * <code>RESULT_ID_VERSION_SAME = -11;</code>
         *
         * <pre>
         *版本号相同
         * </pre>
         */
        public static final int RESULT_ID_VERSION_SAME_VALUE = -11;
        /**
         * <code>RESULT_ID_RPC_TIMEOUT = -12;</code>
         *
         * <pre>
         *调用超时
         * </pre>
         */
        public static final int RESULT_ID_RPC_TIMEOUT_VALUE = -12;
        /**
         * <code>RESULT_ID_ACCOUNT_EXIST = -21;</code>
         *
         * <pre>
         *账号: 账号存在
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_EXIST_VALUE = -21;
        /**
         * <code>RESULT_ID_ACCOUNT_NOT_EXIST = -22;</code>
         *
         * <pre>
         *账号: 账号不存在
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_NOT_EXIST_VALUE = -22;
        /**
         * <code>RESULT_ID_ACCOUNT_PWD_ERROR = -23;</code>
         *
         * <pre>
         *账号: 密码错误
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_PWD_ERROR_VALUE = -23;
        /**
         * <code>RESULT_ID_ACCOUNT_BEEN_BIND = -24;</code>
         *
         * <pre>
         *账号: 已绑定(第三方账号已与壹时尚账号绑定)
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_BEEN_BIND_VALUE = -24;
        /**
         * <code>RESULT_ID_ACCOUNT_NOT_BIND = -25;</code>
         *
         * <pre>
         *账号: 未绑定(第三方账号未与壹时尚账号绑定)
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_NOT_BIND_VALUE = -25;
        /**
         * <code>RESULT_ID_ACCOUNT_OAUTH_ERROR = -26;</code>
         *
         * <pre>
         *账号: 第三方授权非法
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_OAUTH_ERROR_VALUE = -26;
        /**
         * <code>RESULT_ID_ACCOUNT_NICKNAME_EXIST = -27;</code>
         *
         * <pre>
         *账号: 昵称已存在
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_NICKNAME_EXIST_VALUE = -27;
        /**
         * <code>RESULT_ID_ACCOUNT_VERIFY_CODE_ERROR = -28;</code>
         *
         * <pre>
         *账号: 验证码错误
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_VERIFY_CODE_ERROR_VALUE = -28;
        /**
         * <code>RESULT_ID_ACCOUNT_VERIFY_CODE_LIMIT = -29;</code>
         *
         * <pre>
         *账号: 验证码频率限制
         * </pre>
         */
        public static final int RESULT_ID_ACCOUNT_VERIFY_CODE_LIMIT_VALUE = -29;
        /**
         * <code>RESULT_ID_MERCHANT_BEEN_FOLLOW = -31;</code>
         *
         * <pre>
         *商户: 已关注
         * </pre>
         */
        public static final int RESULT_ID_MERCHANT_BEEN_FOLLOW_VALUE = -31;
        /**
         * <code>RESULT_ID_MERCHANT_NOT_FOLLOW = -32;</code>
         *
         * <pre>
         *商户: 未关注
         * </pre>
         */
        public static final int RESULT_ID_MERCHANT_NOT_FOLLOW_VALUE = -32;
        /**
         * <code>RESULT_ID_MERCHANT_NOT_EXIST = -33;</code>
         *
         * <pre>
         *商户: 不存在
         * </pre>
         */
        public static final int RESULT_ID_MERCHANT_NOT_EXIST_VALUE = -33;
        /**
         * <code>RESULT_ID_COUPON_USED = -41;</code>
         *
         * <pre>
         *优惠券: 已使用
         * </pre>
         */
        public static final int RESULT_ID_COUPON_USED_VALUE = -41;
        /**
         * <code>RESULT_ID_COUPON_INVALID = -42;</code>
         *
         * <pre>
         *优惠券: 无效
         * </pre>
         */
        public static final int RESULT_ID_COUPON_INVALID_VALUE = -42;
        /**
         * <code>RESULT_ID_CUSTOMER_ADDRESS_NOT_EXIST = -51;</code>
         *
         * <pre>
         *用户地址不存在
         * </pre>
         */
        public static final int RESULT_ID_CUSTOMER_ADDRESS_NOT_EXIST_VALUE = -51;
        /**
         * <code>RESULT_ID_GIFT_CARD_NOT_EXIST = -61;</code>
         *
         * <pre>
         *充值卡不存在
         * </pre>
         */
        public static final int RESULT_ID_GIFT_CARD_NOT_EXIST_VALUE = -61;
        /**
         * <code>RESULT_ID_GIFT_CARD_NOT_VALID = -62;</code>
         *
         * <pre>
         *充值卡无效
         * </pre>
         */
        public static final int RESULT_ID_GIFT_CARD_NOT_VALID_VALUE = -62;
        /**
         * <code>RESULT_ID_PARCEL_NOT_EXIST = -71;</code>
         *
         * <pre>
         *包裹不存在
         * </pre>
         */
        public static final int RESULT_ID_PARCEL_NOT_EXIST_VALUE = -71;
        /**
         * <code>RESULT_ID_CARTITEM_NOSTOCK_OR_DUE = -72;</code>
         *
         * <pre>
         *产品库存不够或者产品过期
         * </pre>
         */
        public static final int RESULT_ID_CARTITEM_NOSTOCK_OR_DUE_VALUE = -72;


        public final int getNumber() { return value; }

        public static FksCSResultld valueOf(int value) {
            switch (value) {
                case 0: return RESULT_ID_SUCCESS;
                case -1: return RESULT_ID_SYSTEM_ERROR;
                case -2: return RESULT_ID_INVALID_PARAM;
                case -3: return RESULT_ID_PROTOCOL_ERROR;
                case -4: return RESULT_ID_PB_ENCODE_FAIL;
                case -5: return RESULT_ID_PB_DECODE_FAIL;
                case -6: return RESULT_ID_TICKET_INVALID;
                case -7: return RESULT_ID_ENCRYPT_FAIL;
                case -8: return RESULT_ID_DECRYPT_FAIL;
                case -9: return RESULT_ID_COMPRESS_FAIL;
                case -10: return RESULT_ID_UNCOMPRESS_FAIL;
                case -11: return RESULT_ID_VERSION_SAME;
                case -12: return RESULT_ID_RPC_TIMEOUT;
                case -21: return RESULT_ID_ACCOUNT_EXIST;
                case -22: return RESULT_ID_ACCOUNT_NOT_EXIST;
                case -23: return RESULT_ID_ACCOUNT_PWD_ERROR;
                case -24: return RESULT_ID_ACCOUNT_BEEN_BIND;
                case -25: return RESULT_ID_ACCOUNT_NOT_BIND;
                case -26: return RESULT_ID_ACCOUNT_OAUTH_ERROR;
                case -27: return RESULT_ID_ACCOUNT_NICKNAME_EXIST;
                case -28: return RESULT_ID_ACCOUNT_VERIFY_CODE_ERROR;
                case -29: return RESULT_ID_ACCOUNT_VERIFY_CODE_LIMIT;
                case -31: return RESULT_ID_MERCHANT_BEEN_FOLLOW;
                case -32: return RESULT_ID_MERCHANT_NOT_FOLLOW;
                case -33: return RESULT_ID_MERCHANT_NOT_EXIST;
                case -41: return RESULT_ID_COUPON_USED;
                case -42: return RESULT_ID_COUPON_INVALID;
                case -51: return RESULT_ID_CUSTOMER_ADDRESS_NOT_EXIST;
                case -61: return RESULT_ID_GIFT_CARD_NOT_EXIST;
                case -62: return RESULT_ID_GIFT_CARD_NOT_VALID;
                case -71: return RESULT_ID_PARCEL_NOT_EXIST;
                case -72: return RESULT_ID_CARTITEM_NOSTOCK_OR_DUE;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<FksCSResultld>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<FksCSResultld>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<FksCSResultld>() {
                    public FksCSResultld findValueByNumber(int number) {
                        return FksCSResultld.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return fksproto.CsConst.getDescriptor().getEnumTypes().get(0);
        }

        private static final FksCSResultld[] VALUES = values();

        public static FksCSResultld valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private FksCSResultld(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:fksproto.FksCSResultld)
    }


    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        java.lang.String[] descriptorData = {
                "\n\016cs_const.proto\022\010fksproto*\255\n\n\rFksCSResu" +
                        "ltld\022\025\n\021RESULT_ID_SUCCESS\020\000\022#\n\026RESULT_ID" +
                        "_SYSTEM_ERROR\020\377\377\377\377\377\377\377\377\377\001\022$\n\027RESULT_ID_IN" +
                        "VALID_PARAM\020\376\377\377\377\377\377\377\377\377\001\022%\n\030RESULT_ID_PROT" +
                        "OCOL_ERROR\020\375\377\377\377\377\377\377\377\377\001\022%\n\030RESULT_ID_PB_EN" +
                        "CODE_FAIL\020\374\377\377\377\377\377\377\377\377\001\022%\n\030RESULT_ID_PB_DEC" +
                        "ODE_FAIL\020\373\377\377\377\377\377\377\377\377\001\022%\n\030RESULT_ID_TICKET_" +
                        "INVALID\020\372\377\377\377\377\377\377\377\377\001\022#\n\026RESULT_ID_ENCRYPT_" +
                        "FAIL\020\371\377\377\377\377\377\377\377\377\001\022#\n\026RESULT_ID_DECRYPT_FAI" +
                        "L\020\370\377\377\377\377\377\377\377\377\001\022$\n\027RESULT_ID_COMPRESS_FAIL\020",
                "\367\377\377\377\377\377\377\377\377\001\022&\n\031RESULT_ID_UNCOMPRESS_FAIL\020" +
                        "\366\377\377\377\377\377\377\377\377\001\022#\n\026RESULT_ID_VERSION_SAME\020\365\377\377" +
                        "\377\377\377\377\377\377\001\022\"\n\025RESULT_ID_RPC_TIMEOUT\020\364\377\377\377\377\377\377" +
                        "\377\377\001\022$\n\027RESULT_ID_ACCOUNT_EXIST\020\353\377\377\377\377\377\377\377\377" +
                        "\001\022(\n\033RESULT_ID_ACCOUNT_NOT_EXIST\020\352\377\377\377\377\377\377" +
                        "\377\377\001\022(\n\033RESULT_ID_ACCOUNT_PWD_ERROR\020\351\377\377\377\377" +
                        "\377\377\377\377\001\022(\n\033RESULT_ID_ACCOUNT_BEEN_BIND\020\350\377\377" +
                        "\377\377\377\377\377\377\001\022\'\n\032RESULT_ID_ACCOUNT_NOT_BIND\020\347\377" +
                        "\377\377\377\377\377\377\377\001\022*\n\035RESULT_ID_ACCOUNT_OAUTH_ERRO" +
                        "R\020\346\377\377\377\377\377\377\377\377\001\022-\n RESULT_ID_ACCOUNT_NICKNA",
                "ME_EXIST\020\345\377\377\377\377\377\377\377\377\001\0220\n#RESULT_ID_ACCOUNT" +
                        "_VERIFY_CODE_ERROR\020\344\377\377\377\377\377\377\377\377\001\0220\n#RESULT_" +
                        "ID_ACCOUNT_VERIFY_CODE_LIMIT\020\343\377\377\377\377\377\377\377\377\001\022" +
                        "+\n\036RESULT_ID_MERCHANT_BEEN_FOLLOW\020\341\377\377\377\377\377" +
                        "\377\377\377\001\022*\n\035RESULT_ID_MERCHANT_NOT_FOLLOW\020\340\377" +
                        "\377\377\377\377\377\377\377\001\022)\n\034RESULT_ID_MERCHANT_NOT_EXIST" +
                        "\020\337\377\377\377\377\377\377\377\377\001\022\"\n\025RESULT_ID_COUPON_USED\020\327\377\377" +
                        "\377\377\377\377\377\377\001\022%\n\030RESULT_ID_COUPON_INVALID\020\326\377\377\377" +
                        "\377\377\377\377\377\001\0221\n$RESULT_ID_CUSTOMER_ADDRESS_NOT" +
                        "_EXIST\020\315\377\377\377\377\377\377\377\377\001\022*\n\035RESULT_ID_GIFT_CARD",
                "_NOT_EXIST\020\303\377\377\377\377\377\377\377\377\001\022*\n\035RESULT_ID_GIFT_" +
                        "CARD_NOT_VALID\020\302\377\377\377\377\377\377\377\377\001\022\'\n\032RESULT_ID_P" +
                        "ARCEL_NOT_EXIST\020\271\377\377\377\377\377\377\377\377\001\022.\n!RESULT_ID_" +
                        "CARTITEM_NOSTOCK_OR_DUE\020\270\377\377\377\377\377\377\377\377\001"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
