package com.fuexpress.kr.ui.activity;

import android.graphics.Bitmap;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.webkit.WebChromeClient;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.fuexpress.kr.R;
import com.fuexpress.kr.base.BaseActivity;
import com.fuexpress.kr.conf.Constants;
import com.fuexpress.kr.model.AccountManager;
import com.fuexpress.kr.ui.view.TitleBarView;
import com.fuexpress.kr.utils.LogUtils;


/**
 * Created by Administrator on 2016-12-12.
 */

public class ContractServiceActivity extends BaseActivity {

    private View rootView;
    private WebView mWebView;
    private ProgressBar mPb;
    private RelativeLayout titleBarLayout;

    private TextView       refreshTv;
    private ImageView toBackIv;
    private TitleBarView titleBarView;

    @Override
    public View setInitView() {
        rootView = LayoutInflater.from(this).inflate(R.layout.contract_service_activity, null);
        titleBarView = (TitleBarView) rootView.findViewById(R.id.contract_service_titlebar);

        toBackIv = titleBarView.getIv_in_title_back();
        titleBarView.setTitleText(getString(R.string.String_contract_service));
        refreshTv = titleBarView.getTv_in_title_right();
        refreshTv.setText(getResources().getString(R.string.String_refresh));

        mWebView = (WebView) rootView.findViewById(R.id.constract_service_wv);
        mPb = (ProgressBar) rootView.findViewById(R.id.constract_service_pb);


        mWebView.loadUrl(Constants.URL_CHATRA_OFFICIAL);
        mWebView.getSettings().setJavaScriptEnabled(true);
        init(Constants.URL_CHATRA_OFFICIAL + "&" + AccountManager.getInstance().getLocaleCode());
        mWebView.setOnKeyListener(new View.OnKeyListener() {
            @Override
            public boolean onKey(View v, int keyCode, KeyEvent event) {
                if (event.getAction() == KeyEvent.ACTION_DOWN) {
                    if (keyCode == KeyEvent.KEYCODE_BACK && mWebView.canGoBack()) {  //表示按返回键
                        finish();   //后退
                        return true;    //已处理
                    }
                }
                return false;
            }
        });

        toBackIv.setOnClickListener(this);
        refreshTv.setOnClickListener(this);

        return rootView;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.tv_in_title_right:
                mWebView.loadUrl(Constants.URL_CHATRA_OFFICIAL);
                break;
            case R.id.iv_in_title_back:
                finish();
                break;
        }
    }

    public void init(String url){
        mWebView.setWebViewClient(new WebViewClient() {
            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                LogUtils.d("--------------url: " + url);
                if (url != null && !url.equals(url)) {
                    finish();
                }
                return true;
            }

            @Override
            public void onPageStarted(WebView view, String url, Bitmap favicon) {
                mPb.setVisibility(View.VISIBLE);
                super.onPageStarted(view, url, favicon);
            }

            @Override
            public void onPageFinished(WebView view, String url) {
                mPb.setVisibility(View.INVISIBLE);
                super.onPageFinished(view, url);
            }
        });

        mWebView.setWebChromeClient(new WebChromeClient() {
            @Override
            public void onProgressChanged(WebView view, int newProgress) {
                mPb.setProgress(newProgress);
                super.onProgressChanged(view, newProgress);
            }
        });
    }
}
